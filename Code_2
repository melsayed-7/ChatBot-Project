{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Copy of Untitled4.ipynb",
      "version": "0.3.2",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/moustafa-7/ChatBot-Project/blob/master/Code_2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "PK0GMqTRHK3O",
        "colab_type": "code",
        "outputId": "955ac919-4b13-4d6f-cd1c-b3aaf00a895f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "import gc\n",
        "gc.collect()"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 1
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bVON29vGZa5D",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# The new data set (Movie Dialogues)\n",
        "!wget http://www.cs.cornell.edu/~cristian/data/cornell_movie_dialogs_corpus.zip\n",
        "!unzip cornell_movie_dialogs_corpus.zip -d dataset"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "-OTgNxLz5sqn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!pip install chatterbot\n",
        "!pip install chatterbot-corpus\n",
        "!pip install requests\n",
        "!pip install chatterbot\n",
        "!pip install argparse"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MSbXJwTgZGxX",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import os\n",
        "import requests\n",
        "import time\n",
        "import argparse\n",
        "import os\n",
        "import json\n",
        "from requests.compat import urljoin\n",
        "import gensim\n",
        "from chatterbot import ChatBot\n",
        "from bs4 import BeautifulSoup \n",
        "import requests\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import pickle\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import accuracy_score\n",
        "import re\n",
        "import nltk\n",
        "import sklearn\n",
        "from sklearn.model_selection import train_test_split\n",
        "#import train_test_splitnltk.download(\"stopwords\")\n",
        "from nltk.corpus import stopwords\n",
        "from sklearn.multiclass import OneVsRestClassifier\n",
        "import gensim\n",
        "import pickle\n",
        "import re\n",
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "import numpy as np\n",
        "from sklearn.metrics.pairwise import pairwise_distances_argmin"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mgRq1WCT7Y_T",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!wget -c \"https://s3.amazonaws.com/dl4j-distribution/GoogleNews-vectors-negative300.bin.gz\"\n",
        "!gunzip GoogleNews-vectors-negative300.bin.gz\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "19VhHpxkv3Ac",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import gensim\n",
        "import pickle\n",
        "import re\n",
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "import numpy as np\n",
        "from sklearn.metrics.pairwise import pairwise_distances_argminpi\n",
        "\n",
        "# We will need this function to prepare text at prediction time\n",
        "def text_prepare(text):\n",
        "    \"\"\"Performs tokenization and simple preprocessing.\"\"\"\n",
        "    \n",
        "    replace_by_space_re = re.compile('[/(){}\\[\\]\\|@,;]')\n",
        "    bad_symbols_re = re.compile('[^0-9a-z #+_]')\n",
        "    stopwords_set = set(stopwords.words('english'))\n",
        "\n",
        "    text = text.lower()\n",
        "    text = replace_by_space_re.sub(' ', text)\n",
        "    text = bad_symbols_re.sub('', text)\n",
        "    text = ' '.join([x for x in text.split() if x and x not in stopwords_set])\n",
        "\n",
        "    return text.strip()\n",
        "\n",
        "# need this to convert questions asked by user to vectors\n",
        "def question_to_vec(question, embeddings, dim=300os):\n",
        "    \"\"\"\n",
        "        question: a string\n",
        "        embeddings: dict where the key is a word and a value is its' embedding\n",
        "        dim: size of the representation\n",
        "\n",
        "        result: vector representation for the question\n",
        "    \"\"\"\n",
        "    word_tokens = question.split(\" \")\n",
        "    question_len = len(word_tokens)\n",
        "    question_mat = np.zeros((question_len,dim), dtype = np.float32)\n",
        "    \n",
        "    for idx, word in enumerate(word_tokens):\n",
        "        if word in embeddings:\n",
        "            question_mat[idx,:] = embeddings[word]\n",
        "            \n",
        "    # remove zero-rows which stand for OOV words       \n",
        "    question_mat = question_mat[~np.all(question_mat == 0, axis = 1)]\n",
        "    \n",
        "    # Compute the mean of each word along the sentence\n",
        "    if question_mat.shape[0] > 0:\n",
        "        vec = np.array(np.mean(question_mat, axis = 0), dtype = np.float32).reshape((1,dim))\n",
        "    else:\n",
        "        vec = np.zeros((1,dim), dtype = np.float32)\n",
        "        \n",
        "    return vec\n",
        "\n",
        "class SimpleDialogueManager_2(object):\n",
        "    \"\"\"\n",
        "    This is a simple dialogue manager to test the telegram bot.\n",
        "    The main part of our bot will be written here.\n",
        "    \"\"\"\n",
        "    def __init__(self):\n",
        "\n",
        "        # Instantiate all the models and TFIDF Objects.\n",
        "        print(\"Loading resources...\")\n",
        "        # Instantiate a Chatterbot for Chitchat type questions\n",
        "        from chatterbot import ChatBot\n",
        "        from chatterbot.trainers import ChatterBotCorpusTrainer\n",
        "        chatbot = ChatBot('MLWhizChatterbot')\n",
        "        trainer = ChatterBotCorpusTrainer(chatbot)\n",
        "        trainer.train('chatterbot.corpus.english')\n",
        "        self.chitchat_bot = chatbot\n",
        "        print(\"Loading Word2vec model...\")\n",
        "        # Instantiate the Google's pre-trained Word2Vec model.\n",
        "        self.model = gensim.models.KeyedVectors.load_word2vec_format('GoogleNews-vectors-negative300.bin', binary=True) \n",
        "        print(\"Loading Classifier objects...\")\n",
        "        # Load the intent classifier and tag classifier\n",
        "        self.intent_recognizer =  pickle.load(open('resources/intent_clf.pkl', 'rb'))\n",
        "        self.tag_classifier =  pickle.load(open('resources/tag_clf.pkl', 'rb'))\n",
        "        # Load the TFIDF vectorizer object\n",
        "        self.tfidf_vectorizer = pickle.load(open('resources/tfidf.pkl', 'rb'))\n",
        "        print(\"Finished Loading Resources\")\n",
        "\n",
        "    # We created this function just above. We just need to have a function to get most similar question's *post id* in the dataset given we know the programming Language of the question. Here it is:\n",
        "    def get_similar_question(self,question,tag):\n",
        "        # get the path where all question embeddings are kept and load the post_ids and post_embeddings\n",
        "        embeddings_path = 'resources/embeddings_folder/' + tag + \".pkl\"\n",
        "        post_ids, post_embeddings = pickle.load(open(embeddings_path, 'rb'))\n",
        "        # Get the embeddings for the question\n",
        "        question_vec = question_to_vec(question, self.model, 300)\n",
        "        # find index of most similar post\n",
        "        best_post_index = pairwise_distances_argmin(question_vec,\n",
        "                                                    post_embeddings)\n",
        "        # return best post id\n",
        "        return post_ids[best_post_index]\n",
        "\n",
        "    def generate_answer(self, question): \n",
        "        prepared_question = text_prepare(question)\n",
        "        features = self.tfidf_vectorizer.transform([prepared_question])\n",
        "        # find intent\n",
        "        intent = self.intent_recognizer.predict(features)[0]\n",
        "        # Chit-chat part:   \n",
        "        if intent == 'dialogue':\n",
        "            response = self.chitchat_bot.get_response(question)\n",
        "        # Stack Overflow Question\n",
        "        else:\n",
        "            # find programming language\n",
        "            tag = self.tag_classifier.predict(features)[0]\n",
        "            # find most similar question post id\n",
        "            post_id = self.get_similar_question(question,tag)[0]\n",
        "            # respond with \n",
        "            response = 'I think its about %s\\nThis thread might help you: https://stackoverflow.com/questions/%s' % (tag, post_id)\n",
        "        return response"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mTKDtW-1ZKY6",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "class BotHandler(object):\n",
        "    \"\"\"\n",
        "        BotHandler is a class which implements all back-end of the bot.\n",
        "        It has three main functions:\n",
        "            'get_updates' — checks for new messages\n",
        "            'send_message' – posts new message to user\n",
        "            'get_answer' — computes the most relevant on a user's question\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self, token, dialogue_manager):\n",
        "        \n",
        "        self.token = token\n",
        "        self.api_url = \"https://api.telegram.org/bot{}/\".format(token)\n",
        "        self.dialogue_manager = dialogue_manager\n",
        "\n",
        "    def get_updates(self, offset=None, timeout=30):\n",
        "        params = {\"timeout\": timeout, \"offset\": offset}\n",
        "        raw_resp = requests.get(urljoin(self.api_url, \"getUpdates\"), params)\n",
        "        try:\n",
        "            resp = raw_resp.json()\n",
        "        except json.decoder.JSONDecodeError as e:\n",
        "            print(\"Failed to parse response {}: {}.\".format(raw_resp.content, e))\n",
        "            return []\n",
        "\n",
        "        if \"result\" not in resp:\n",
        "            return []\n",
        "        return resp[\"result\"]\n",
        "\n",
        "    def send_message(self, chat_id, text):\n",
        "        params = {\"chat_id\": chat_id, \"text\": text}\n",
        "        return requests.post(urljoin(self.api_url, \"sendMessage\"), params)\n",
        "\n",
        "    def get_answer(self, question):\n",
        "        if question == '/start':\n",
        "            return \"Hi, I am your project bot. How can I help you today?\"\n",
        "        return self.dialogue_manager.generate_answer(question)\n",
        "\n",
        "\n",
        "def is_unicode(text):\n",
        "    return len(text) == len(text.encode())\n",
        "\n",
        "\n",
        "# class SimpleDialogueManager(object):\n",
        "#     \"\"\"\n",
        "#     This is a simple dialogue manager to test the telegram bot.\n",
        "#     The main part of our bot will be written here.\n",
        "#     \"\"\"\n",
        "#     def generate_answer(self, question): \n",
        "#         if \"Hi\" in question:\n",
        "#             return \"Hello, You\" \n",
        "#         else:\n",
        "#             return \"Don't be rude. Say Hi first.\"\n",
        "        \n",
        "\n",
        "def main():\n",
        "    # Put your own Telegram Access token here...\n",
        "    token = '828781554:AAEE4sdEf04fZwldjg_mW_8jB7hM8__nuXc'\n",
        "    simple_manager = SimpleDialogueManager_2()\n",
        "    bot = BotHandler(token, simple_manager)\n",
        "    ###############################################################\n",
        "\n",
        "    print(\"Ready to talk!\")\n",
        "    offset = 0\n",
        "    while True:\n",
        "        updates = bot.get_updates(offset=offset)\n",
        "        for update in updates:\n",
        "            print(\"An update received.\")\n",
        "            if \"message\" in update:\n",
        "                chat_id = update[\"message\"][\"chat\"][\"id\"]\n",
        "                if \"text\" in update[\"message\"]:\n",
        "                    text = update[\"message\"][\"text\"]\n",
        "                    if is_unicode(text):\n",
        "                        print(\"Update content: {}\".format(update))\n",
        "                        bot.send_message(chat_id, bot.get_answer(update[\"message\"][\"text\"]))\n",
        "                    else:\n",
        "                        bot.send_message(chat_id, \"Hmm, you are sending some weird characters to me...\")\n",
        "            offset = max(offset, update['update_id'] + 1)\n",
        "        time.sleep(1)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_ya7T9VYajDY",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "class SimpleDialogueManager(object):\n",
        "    \"\"\"\n",
        "    This is a simple dialogue manager to test the telegram bot.\n",
        "    The main part of our bot will be written here.\n",
        "    \"\"\"\n",
        "    def __init__(self):\n",
        "        from chatterbot import ChatBot\n",
        "        from chatterbot.trainers import ChatterBotCorpusTrainer\n",
        "        chatbot = ChatBot('MLWhizChatterbot')\n",
        "        trainer = ChatterBotCorpusTrainer(chatbot)\n",
        "        trainer.train('chatterbot.corpus.english')\n",
        "        self.chitchat_bot = chatbot\n",
        "\n",
        "    def generate_answer(self, question): \n",
        "        response = self.chitchat_bot.get_response(question)\n",
        "        return response"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7N4Cc5wedjlN",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!wget https://github.com/MLWhiz/chatbot/raw/master/data.zip\n",
        "!unzip data.zip -d data\n",
        "#os.rmdir('data')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K98QsIwscj-J",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "dialogues = pd.read_csv(\"data/data/dialogues.tsv\",sep=\"\\t\")\n",
        "posts = pd.read_csv(\"data/data/tagged_posts.tsv\",sep=\"\\t\")\n",
        "\n",
        "dialogues.head()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JA1SDY_lco3O",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "dialogues.head()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uF_dGVMDk46-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "import nltk\n",
        "nltk.download('stopwords')\n",
        "texts  =  list(dialogues[:200000].text.values) + list(posts[:200000].title.values)\n",
        "labels =  ['dialogue']*200000 + ['stackoverflow']*200000\n",
        "data = pd.DataFrame({'text':texts,'target':labels})\n",
        "\n",
        "def text_prepare(text):\n",
        "    \"\"\"Performs tokenization and simple preprocessing.\"\"\"\n",
        "    \n",
        "    replace_by_space_re = re.compile('[/(){}\\[\\]\\|@,;]')\n",
        "    bad_symbols_re = re.compile('[^0-9a-z #+_]')\n",
        "    stopwords_set = set(stopwords.words('english'))\n",
        "\n",
        "    text = text.lower()\n",
        "    text = replace_by_space_re.sub(' ', text)\n",
        "    text = bad_symbols_re.sub('', text)\n",
        "    text = ' '.join([x for x in text.split() if x and x not in stopwords_set])\n",
        "\n",
        "    return text.strip()\n",
        "\n",
        "# Doing some data cleaning\n",
        "data['text'] = data['text'].apply(lambda x : text_prepare(x))\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(data['text'],data['target'],test_size = .1 , random_state=0)\n",
        "\n",
        "print('Train size = {}, test size = {}'.format(len(X_train), len(X_test)))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3uU8cpOKmDYW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# We will keep our models and vectorizers in this folder\n",
        "\n",
        "def tfidf_features(X_train, X_test, vectorizer_path):\n",
        "    \"\"\"Performs TF-IDF transformation and dumps the model.\"\"\"\n",
        "    tfv = TfidfVectorizer(dtype=np.float32, min_df=3,  max_features=None, \n",
        "            strip_accents='unicode', analyzer='word',token_pattern=r'\\w{1,}',\n",
        "            ngram_range=(1, 3), use_idf=1,smooth_idf=1,sublinear_tf=1,\n",
        "            stop_words = 'english')\n",
        "    \n",
        "    X_train = tfv.fit_transform(X_train)\n",
        "    X_test = tfv.transform(X_test)\n",
        "    \n",
        "    pickle.dump(tfv,vectorizer_path)\n",
        "    return X_train, X_test\n",
        "\n",
        "os.mkdir('resources')  \n",
        "X_train_tfidf, X_test_tfidf = tfidf_features(X_train, X_test, open(\"resources/tfidf.pkl\",'wb'))\n",
        "\n",
        "intent_recognizer = LogisticRegression(C=10,random_state=0)\n",
        "intent_recognizer.fit(X_train_tfidf,y_train)\n",
        "pickle.dump(intent_recognizer, open(\"resources/intent_clf.pkl\" , 'wb'))\n",
        "\n",
        "# Check test accuracy.\n",
        "y_test_pred = intent_recognizer.predict(X_test_tfidf)\n",
        "test_accuracy = accuracy_score(y_test, y_test_pred)\n",
        "print('Test accuracy = {}'.format(test_accuracy))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ry2rwYQxrxrq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# creating the data for Programming Language classifier \n",
        "X = posts['title'].values\n",
        "y = posts['tag'].values\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)\n",
        "print('Train size = {}, test size = {}'.format(len(X_train), len(X_test)))\n",
        "os.mkdir('resources')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Kkjkg9Gkvfj7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "vectorizer = pickle.load(open(\"resources/tfidf.pkl\", 'rb'))\n",
        "X_train_tfidf, X_test_tfidf = vectorizer.transform(X_train), vectorizer.transform(X_test)\n",
        "tag_classifier = OneVsRestClassifier(LogisticRegression(C=5,random_state=0))\n",
        "tag_classifier.fit(X_train_tfidf,y_train)\n",
        "pickle.dump(tag_classifier, open(\"resources/tag_clf.pkl\", 'wb'))\n",
        "\n",
        "# Check test accuracy.\n",
        "y_test_pred = tag_classifier.predict(X_test_tfidf)\n",
        "test_accuracy = accuracy_score(y_test, y_test_pred)\n",
        "print('Test accuracy = {}'.format(test_accuracy))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kFb4tmFsvhqE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# Load Google's pre-trained Word2Vec model.\n",
        "#model = gensim.models.KeyedVectors.load_word2vec_format('GoogleNews-vectors-negative300.bin', binary=True) \n",
        "#!wget -c \"https://s3.amazonaws.com/dl4j-distribution/GoogleNews-vectors-negative300.bin.gz\"\n",
        "\n",
        "pretrained_embeddings_path = \"https://s3.amazonaws.com/dl4j-distribution/GoogleNews-vectors-negative300.bin.gz\"\n",
        "model = gensim.models.KeyedVectors.load_word2vec_format(pretrained_embeddings_path,binary=True)\n",
        "\n",
        "# from gensim import models\n",
        "\n",
        "# w = models.KeyedVectors.load_word2vec_format('GoogleNews-vectors-negative300.bin.gz', binary=True)\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "oY-IvMZtvpPq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def question_to_vec(question, embeddings, dim=300):\n",
        "    \"\"\"\n",
        "        question: a string\n",
        "        embeddings: dict where the key is a word and a value is its' embedding\n",
        "        dim: size of the representation\n",
        "\n",
        "        result: vector representation for the question\n",
        "    \"\"\"\n",
        "    word_tokens = question.split(\" \")\n",
        "    question_len = len(word_tokens)\n",
        "    question_mat = np.zeros((question_len,dim), dtype = np.float32)\n",
        "    \n",
        "    for idx, word in enumerate(word_tokens):\n",
        "        if word in embeddings:\n",
        "            question_mat[idx,:] = embeddings[word]\n",
        "            \n",
        "    # remove zero-rows which stand for OOV words       \n",
        "    question_mat = question_mat[~np.all(question_mat == 0, axis = 1)]\n",
        "    \n",
        "    # Compute the mean of each word along the sentence\n",
        "    if question_mat.shape[0] > 0:\n",
        "        vec = np.array(np.mean(question_mat, axis = 0), dtype = np.float32).reshape((1,dim))\n",
        "    else:\n",
        "        vec = np.zeros((1,dim), dtype = np.float32)\n",
        "        \n",
        "    return vec\n",
        "\n",
        "counts_by_tag = posts.groupby(by=['tag'])[\"tag\"].count().reset_index(name = 'count').sort_values(['count'], ascending = False)\n",
        "counts_by_tag = list(zip(counts_by_tag['tag'],counts_by_tag['count']))\n",
        "print(counts_by_tag)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bjZ4INE1vpSk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "# import os\n",
        "os.mkdir('resources/embeddings_folder')\n",
        "for tag, count in counts_by_tag:\n",
        "    tag_posts = posts[posts['tag'] == tag]\n",
        "    tag_posts\n",
        "    tag_post_ids = tag_posts['post_id'].values\n",
        "    tag_vectors = np.zeros((count, 300), dtype=np.float32)\n",
        "    for i, title in enumerate(tag_posts['title']):\n",
        "        tag_vectors[i, :] = question_to_vec(title, model, 300)\n",
        "    # Dump post ids and vectors to a file.\n",
        "    filename = 'resources/embeddings_folder/'+ tag + '.pkl'\n",
        "    pickle.dump((tag_post_ids, tag_vectors), open(filename, 'wb'))"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AZDEOYuXvx4K",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "\n",
        "from sklearn.metrics.pairwise import pairwise_distances_argmin\n",
        "def get_similar_question(question,tag):\n",
        "    # get the path where all question embeddings are kept and load the post_ids and post_embeddings\n",
        "    embeddings_path = 'resources/embeddings_folder/' + tag + \".pkl\"\n",
        "    post_ids, post_embeddings = pickle.load(open(embeddings_path, 'rb'))\n",
        "    # Get the embeddings for the question\n",
        "    question_vec = question_to_vec(question, model, 300)\n",
        "    # find index of most similar post\n",
        "    best_post_index = pairwise_distances_argmin(question_vec,\n",
        "                                                post_embeddings)\n",
        "    # return best post id\n",
        "    return post_ids[best_post_index]\n",
        "\n",
        "get_similar_question(\"how to use list comprehension in python?\",'python')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O8pKTcUBv8WB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IiRY9Ov93zk1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "68Hica7G3zn5",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bMNtRqDR3zqz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "21cVIPTk3zt_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 2380
        },
        "outputId": "5873c183-4c43-4bcf-bff6-4021ac837042"
      },
      "source": [
        "!pip install chatterbot\n",
        "!pip install chatterbot-corpus\n",
        "!pip install requests\n",
        "!pip install chatterbot\n",
        "!pip install argparse"
      ],
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Collecting chatterbot\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/6c/0e/dac0d82f34f86bf509cf5ef3e2dfc5aa7d444bd843a2330ceb7d854f84f2/ChatterBot-1.0.5-py2.py3-none-any.whl (67kB)\n",
            "\u001b[K     |████████████████████████████████| 71kB 8.1MB/s \n",
            "\u001b[?25hCollecting python-dateutil<2.8,>=2.7 (from chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/74/68/d87d9b36af36f44254a8d512cbfc48369103a3b9e474be9bdfe536abfc45/python_dateutil-2.7.5-py2.py3-none-any.whl (225kB)\n",
            "\u001b[K     |████████████████████████████████| 235kB 20.6MB/s \n",
            "\u001b[?25hCollecting pint>=0.8.1 (from chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/15/9d/bf177ebbc57d25e9e296addc14a1303d1e34d7964af5df428a8332349c42/Pint-0.9-py2.py3-none-any.whl (138kB)\n",
            "\u001b[K     |████████████████████████████████| 143kB 61.8MB/s \n",
            "\u001b[?25hCollecting mathparse<0.2,>=0.1 (from chatterbot)\n",
            "  Downloading https://files.pythonhosted.org/packages/c3/e5/4910fb85950cb960fcf3f5aabe1c8e55f5c9201788a1c1302b570a7e1f84/mathparse-0.1.2-py3-none-any.whl\n",
            "Collecting pyyaml<5.2,>=5.1 (from chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9f/2c/9417b5c774792634834e730932745bc09a7d36754ca00acf1ccd1ac2594d/PyYAML-5.1.tar.gz (274kB)\n",
            "\u001b[K     |████████████████████████████████| 276kB 54.5MB/s \n",
            "\u001b[?25hRequirement already satisfied: nltk<4.0,>=3.2 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (3.2.5)\n",
            "Collecting sqlalchemy<1.3,>=1.2 (from chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/f9/67/d07cf7ac7e6dd0bc55ba62816753f86d7c558107104ca915e730c9ec2512/SQLAlchemy-1.2.19.tar.gz (5.7MB)\n",
            "\u001b[K     |████████████████████████████████| 5.7MB 46.4MB/s \n",
            "\u001b[?25hCollecting spacy<2.2,>=2.1 (from chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a1/5b/0fab3fa533229436533fb504bb62f4cf7ea29541a487a9d1a0749876fc23/spacy-2.1.4-cp36-cp36m-manylinux1_x86_64.whl (29.8MB)\n",
            "\u001b[K     |████████████████████████████████| 29.8MB 30.0MB/s \n",
            "\u001b[?25hRequirement already satisfied: pymongo<4.0,>=3.3 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (3.8.0)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.6/dist-packages (from chatterbot) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil<2.8,>=2.7->chatterbot) (1.12.0)\n",
            "Collecting blis<0.3.0,>=0.2.2 (from spacy<2.2,>=2.1->chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/34/46/b1d0bb71d308e820ed30316c5f0a017cb5ef5f4324bcbc7da3cf9d3b075c/blis-0.2.4-cp36-cp36m-manylinux1_x86_64.whl (3.2MB)\n",
            "\u001b[K     |████████████████████████████████| 3.2MB 37.7MB/s \n",
            "\u001b[?25hRequirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (1.0.2)\n",
            "Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.21.0)\n",
            "Collecting thinc<7.1.0,>=7.0.2 (from spacy<2.2,>=2.1->chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/a9/f1/3df317939a07b2fc81be1a92ac10bf836a1d87b4016346b25f8b63dee321/thinc-7.0.4-cp36-cp36m-manylinux1_x86_64.whl (2.1MB)\n",
            "\u001b[K     |████████████████████████████████| 2.1MB 21.4MB/s \n",
            "\u001b[?25hCollecting wasabi<1.1.0,>=0.2.0 (from spacy<2.2,>=2.1->chatterbot)\n",
            "  Downloading https://files.pythonhosted.org/packages/f4/c1/d76ccdd12c716be79162d934fe7de4ac8a318b9302864716dde940641a79/wasabi-0.2.2-py3-none-any.whl\n",
            "Requirement already satisfied: preshed<2.1.0,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.0.1)\n",
            "Requirement already satisfied: plac<1.0.0,>=0.9.6 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (0.9.6)\n",
            "Requirement already satisfied: jsonschema<3.1.0,>=2.6.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.6.0)\n",
            "Collecting srsly<1.1.0,>=0.0.5 (from spacy<2.2,>=2.1->chatterbot)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/6b/97/47753e3393aa4b18de9f942fac26f18879d1ae950243a556888f389d1398/srsly-0.0.5-cp36-cp36m-manylinux1_x86_64.whl (180kB)\n",
            "\u001b[K     |████████████████████████████████| 184kB 46.4MB/s \n",
            "\u001b[?25hRequirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.0.2)\n",
            "Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (1.16.4)\n",
            "Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (2.8)\n",
            "Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (1.24.3)\n",
            "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (3.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (2019.3.9)\n",
            "Requirement already satisfied: tqdm<5.0.0,>=4.10.0 in /usr/local/lib/python3.6/dist-packages (from thinc<7.1.0,>=7.0.2->spacy<2.2,>=2.1->chatterbot) (4.28.1)\n",
            "Building wheels for collected packages: pyyaml, sqlalchemy\n",
            "  Building wheel for pyyaml (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Stored in directory: /root/.cache/pip/wheels/ad/56/bc/1522f864feb2a358ea6f1a92b4798d69ac783a28e80567a18b\n",
            "  Building wheel for sqlalchemy (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Stored in directory: /root/.cache/pip/wheels/2c/90/a7/3b40c6cc468abff357b38fd075429920bd0d313659d889cf8a\n",
            "Successfully built pyyaml sqlalchemy\n",
            "\u001b[31mERROR: albumentations 0.1.12 has requirement imgaug<0.2.7,>=0.2.5, but you'll have imgaug 0.2.9 which is incompatible.\u001b[0m\n",
            "Installing collected packages: python-dateutil, pint, mathparse, pyyaml, sqlalchemy, blis, srsly, wasabi, thinc, spacy, chatterbot\n",
            "  Found existing installation: python-dateutil 2.5.3\n",
            "    Uninstalling python-dateutil-2.5.3:\n",
            "      Successfully uninstalled python-dateutil-2.5.3\n",
            "  Found existing installation: PyYAML 3.13\n",
            "    Uninstalling PyYAML-3.13:\n",
            "      Successfully uninstalled PyYAML-3.13\n",
            "  Found existing installation: SQLAlchemy 1.3.4\n",
            "    Uninstalling SQLAlchemy-1.3.4:\n",
            "      Successfully uninstalled SQLAlchemy-1.3.4\n",
            "  Found existing installation: thinc 6.12.1\n",
            "    Uninstalling thinc-6.12.1:\n",
            "      Successfully uninstalled thinc-6.12.1\n",
            "  Found existing installation: spacy 2.0.18\n",
            "    Uninstalling spacy-2.0.18:\n",
            "      Successfully uninstalled spacy-2.0.18\n",
            "Successfully installed blis-0.2.4 chatterbot-1.0.5 mathparse-0.1.2 pint-0.9 python-dateutil-2.7.5 pyyaml-5.1 spacy-2.1.4 sqlalchemy-1.2.19 srsly-0.0.5 thinc-7.0.4 wasabi-0.2.2\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "dateutil"
                ]
              }
            }
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Collecting chatterbot-corpus\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/ed/19/f8b41daf36fe4b0f43e283a820362ffdb2c1128600ab4ee187e84262fa4d/chatterbot_corpus-1.2.0-py2.py3-none-any.whl (117kB)\n",
            "\u001b[K     |████████████████████████████████| 122kB 9.9MB/s \n",
            "\u001b[?25hCollecting PyYAML<4.0,>=3.12 (from chatterbot-corpus)\n",
            "\u001b[?25l  Downloading https://files.pythonhosted.org/packages/9e/a3/1d13970c3f36777c583f136c136f804d70f500168edc1edea6daa7200769/PyYAML-3.13.tar.gz (270kB)\n",
            "\u001b[K     |████████████████████████████████| 276kB 37.5MB/s \n",
            "\u001b[?25hBuilding wheels for collected packages: PyYAML\n",
            "  Building wheel for PyYAML (setup.py) ... \u001b[?25l\u001b[?25hdone\n",
            "  Stored in directory: /root/.cache/pip/wheels/ad/da/0c/74eb680767247273e2cf2723482cb9c924fe70af57c334513f\n",
            "Successfully built PyYAML\n",
            "\u001b[31mERROR: chatterbot 1.0.5 has requirement pyyaml<5.2,>=5.1, but you'll have pyyaml 3.13 which is incompatible.\u001b[0m\n",
            "Installing collected packages: PyYAML, chatterbot-corpus\n",
            "  Found existing installation: PyYAML 5.1\n",
            "    Uninstalling PyYAML-5.1:\n",
            "      Successfully uninstalled PyYAML-5.1\n",
            "Successfully installed PyYAML-3.13 chatterbot-corpus-1.2.0\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.6/dist-packages (2.21.0)\n",
            "Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests) (2.8)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests) (2019.3.9)\n",
            "Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests) (1.24.3)\n",
            "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests) (3.0.4)\n",
            "Requirement already satisfied: chatterbot in /usr/local/lib/python3.6/dist-packages (1.0.5)\n",
            "Collecting pyyaml<5.2,>=5.1 (from chatterbot)\n",
            "Requirement already satisfied: mathparse<0.2,>=0.1 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (0.1.2)\n",
            "Requirement already satisfied: nltk<4.0,>=3.2 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (3.2.5)\n",
            "Requirement already satisfied: python-dateutil<2.8,>=2.7 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (2.7.5)\n",
            "Requirement already satisfied: spacy<2.2,>=2.1 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (2.1.4)\n",
            "Requirement already satisfied: pint>=0.8.1 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (0.9)\n",
            "Requirement already satisfied: sqlalchemy<1.3,>=1.2 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (1.2.19)\n",
            "Requirement already satisfied: pymongo<4.0,>=3.3 in /usr/local/lib/python3.6/dist-packages (from chatterbot) (3.8.0)\n",
            "Requirement already satisfied: pytz in /usr/local/lib/python3.6/dist-packages (from chatterbot) (2018.9)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.6/dist-packages (from nltk<4.0,>=3.2->chatterbot) (1.12.0)\n",
            "Requirement already satisfied: blis<0.3.0,>=0.2.2 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (0.2.4)\n",
            "Requirement already satisfied: preshed<2.1.0,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.0.1)\n",
            "Requirement already satisfied: thinc<7.1.0,>=7.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (7.0.4)\n",
            "Requirement already satisfied: plac<1.0.0,>=0.9.6 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (0.9.6)\n",
            "Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (1.0.2)\n",
            "Requirement already satisfied: jsonschema<3.1.0,>=2.6.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.6.0)\n",
            "Requirement already satisfied: requests<3.0.0,>=2.13.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.21.0)\n",
            "Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (2.0.2)\n",
            "Requirement already satisfied: srsly<1.1.0,>=0.0.5 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (0.0.5)\n",
            "Requirement already satisfied: wasabi<1.1.0,>=0.2.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (0.2.2)\n",
            "Requirement already satisfied: numpy>=1.15.0 in /usr/local/lib/python3.6/dist-packages (from spacy<2.2,>=2.1->chatterbot) (1.16.4)\n",
            "Requirement already satisfied: tqdm<5.0.0,>=4.10.0 in /usr/local/lib/python3.6/dist-packages (from thinc<7.1.0,>=7.0.2->spacy<2.2,>=2.1->chatterbot) (4.28.1)\n",
            "Requirement already satisfied: chardet<3.1.0,>=3.0.2 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (3.0.4)\n",
            "Requirement already satisfied: urllib3<1.25,>=1.21.1 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (1.24.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (2019.3.9)\n",
            "Requirement already satisfied: idna<2.9,>=2.5 in /usr/local/lib/python3.6/dist-packages (from requests<3.0.0,>=2.13.0->spacy<2.2,>=2.1->chatterbot) (2.8)\n",
            "\u001b[31mERROR: chatterbot-corpus 1.2.0 has requirement PyYAML<4.0,>=3.12, but you'll have pyyaml 5.1 which is incompatible.\u001b[0m\n",
            "Installing collected packages: pyyaml\n",
            "  Found existing installation: PyYAML 3.13\n",
            "    Uninstalling PyYAML-3.13:\n",
            "      Successfully uninstalled PyYAML-3.13\n",
            "Successfully installed pyyaml-5.1\n",
            "Collecting argparse\n",
            "  Downloading https://files.pythonhosted.org/packages/f2/94/3af39d34be01a24a6e65433d19e107099374224905f1e0cc6bbe1fd22a2f/argparse-1.4.0-py2.py3-none-any.whl\n",
            "Installing collected packages: argparse\n",
            "Successfully installed argparse-1.4.0\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "display_data",
          "data": {
            "application/vnd.colab-display-data+json": {
              "pip_warning": {
                "packages": [
                  "argparse"
                ]
              }
            }
          },
          "metadata": {
            "tags": []
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bfCgtEKg3zwm",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import chatterbot\n",
        "from chatterbot import ChatBot\n",
        "import os\n",
        "import requests\n",
        "import time\n",
        "import argparse\n",
        "import os\n",
        "import json\n",
        "from requests.compat import urljoin\n",
        "import gensim\n",
        "\n",
        "from bs4 import BeautifulSoup \n",
        "import requests\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import pickle\n",
        "from sklearn.feature_extraction.text import TfidfVectorizer\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn.metrics import accuracy_score\n",
        "import re\n",
        "import nltk\n",
        "import sklearn\n",
        "from sklearn.model_selection import train_test_split\n",
        "#import train_test_splitnltk.download(\"stopwords\")\n",
        "from nltk.corpus import stopwords\n",
        "from sklearn.multiclass import OneVsRestClassifier\n",
        "\n",
        "import chatterbot\n",
        "from chatterbot import ChatBot\n",
        "import nltk\n",
        "#nltk.download('stopwords')\n",
        "\n",
        "import gensim\n",
        "import pickle\n",
        "import re\n",
        "import nltk\n",
        "from nltk.corpus import stopwords\n",
        "import numpy as np\n",
        "from sklearn.metrics.pairwise import pairwise_distances_argmin\n",
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vFdSIi4T30wh",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        },
        "outputId": "9af88d11-6abf-4983-d2fb-a6743f5b1a81"
      },
      "source": [
        "!wget -c  http://www.cs.cmu.edu/~ark/QA-data/data/Question_Answer_Dataset_v1.2.tar.gz"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "--2019-05-31 18:34:14--  http://www.cs.cmu.edu/~ark/QA-data/data/Question_Answer_Dataset_v1.2.tar.gz\n",
            "Resolving www.cs.cmu.edu (www.cs.cmu.edu)... 128.2.42.95\n",
            "Connecting to www.cs.cmu.edu (www.cs.cmu.edu)|128.2.42.95|:80... connected.\n",
            "HTTP request sent, awaiting response... 200 OK\n",
            "Length: 8254496 (7.9M) [application/x-tar]\n",
            "Saving to: ‘Question_Answer_Dataset_v1.2.tar.gz’\n",
            "\n",
            "Question_Answer_Dat 100%[===================>]   7.87M   703KB/s    in 12s     \n",
            "\n",
            "2019-05-31 18:34:27 (677 KB/s) - ‘Question_Answer_Dataset_v1.2.tar.gz’ saved [8254496/8254496]\n",
            "\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lqADxnYv4fDg",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 71
        },
        "outputId": "6d79a961-73bc-451b-8be0-7d96a7b5103b"
      },
      "source": [
        "import pandas as pd\n",
        "df = pd.read_csv('Question_Answer_Dataset_v1.2.tar.gz', compression='gzip', header=0, sep='\\t', quotechar='\"', error_bad_lines=False, encoding='latin-1')\n",
        "#pd.read_csv('u.item', sep='|', names=m_cols , encoding='latin-1')"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "b'Skipping line 3214: expected 6 fields, saw 13\\nSkipping line 3677: expected 6 fields, saw 7\\nSkipping line 3749: expected 6 fields, saw 12\\nSkipping line 6655: expected 6 fields, saw 13\\nSkipping line 7064: expected 6 fields, saw 7\\nSkipping line 7136: expected 6 fields, saw 12\\nSkipping line 7413: expected 6 fields, saw 13\\nSkipping line 7466: expected 6 fields, saw 7\\nSkipping line 7538: expected 6 fields, saw 12\\nSkipping line 7691: expected 6 fields, saw 13\\nSkipping line 8394: expected 6 fields, saw 7\\nSkipping line 8466: expected 6 fields, saw 12\\nSkipping line 8664: expected 6 fields, saw 13\\nSkipping line 8864: expected 6 fields, saw 7\\nSkipping line 8936: expected 6 fields, saw 12\\nSkipping line 9564: expected 6 fields, saw 13\\nSkipping line 9800: expected 6 fields, saw 7\\nSkipping line 9872: expected 6 fields, saw 12\\nSkipping line 10932: expected 6 fields, saw 13\\nSkipping line 11123: expected 6 fields, saw 7\\nSkipping line 11195: expected 6 fields, saw 12\\nSkipping line 11990: expected 6 fields, saw 13\\nSkipping line 12117: expected 6 fields, saw 7\\nSkipping line 12189: expected 6 fields, saw 12\\nSkipping line 12330: expected 6 fields, saw 13\\nSkipping line 12414: expected 6 fields, saw 7\\nSkipping line 12486: expected 6 fields, saw 12\\nSkipping line 14052: expected 6 fields, saw 13\\nSkipping line 14831: expected 6 fields, saw 7\\nSkipping line 14903: expected 6 fields, saw 12\\nSkipping line 16744: expected 6 fields, saw 13\\nSkipping line 18024: expected 6 fields, saw 7\\nSkipping line 18096: expected 6 fields, saw 12\\nSkipping line 22761: expected 6 fields, saw 13\\nSkipping line 24135: expected 6 fields, saw 7\\nSkipping line 24207: expected 6 fields, saw 12\\nSkipping line 24900: expected 6 fields, saw 13\\nSkipping line 25931: expected 6 fields, saw 7\\nSkipping line 26003: expected 6 fields, saw 12\\nSkipping line 26168: expected 6 fields, saw 13\\nSkipping line 27072: expected 6 fields, saw 7\\nSkipping line 27144: expected 6 fields, saw 12\\nSkipping line 27332: expected 6 fields, saw 13\\nSkipping line 28376: expected 6 fields, saw 7\\nSkipping line 28448: expected 6 fields, saw 12\\nSkipping line 32214: expected 6 fields, saw 13\\nSkipping line 32896: expected 6 fields, saw 7\\nSkipping line 32968: expected 6 fields, saw 12\\nSkipping line 35644: expected 6 fields, saw 13\\nSkipping line 36940: expected 6 fields, saw 7\\nSkipping line 37012: expected 6 fields, saw 12\\nSkipping line 39501: expected 6 fields, saw 13\\nSkipping line 40311: expected 6 fields, saw 7\\nSkipping line 40383: expected 6 fields, saw 12\\nSkipping line 40555: expected 6 fields, saw 13\\nSkipping line 41548: expected 6 fields, saw 7\\nSkipping line 41620: expected 6 fields, saw 12\\nSkipping line 44484: expected 6 fields, saw 13\\nSkipping line 45123: expected 6 fields, saw 7\\nSkipping line 45195: expected 6 fields, saw 12\\nSkipping line 46458: expected 6 fields, saw 13\\nSkipping line 48468: expected 6 fields, saw 7\\nSkipping line 48540: expected 6 fields, saw 12\\nSkipping line 55448: expected 6 fields, saw 13\\nSkipping line 56665: expected 6 fields, saw 7\\nSkipping line 56737: expected 6 fields, saw 12\\nSkipping line 58040: expected 6 fields, saw 13\\nSkipping line 59044: expected 6 fields, saw 7\\nSkipping line 59116: expected 6 fields, saw 12\\nSkipping line 59335: expected 6 fields, saw 13\\nSkipping line 59963: expected 6 fields, saw 7\\nSkipping line 60035: expected 6 fields, saw 12\\nSkipping line 60268: expected 6 fields, saw 13\\nSkipping line 60873: expected 6 fields, saw 7\\nSkipping line 60945: expected 6 fields, saw 12\\nSkipping line 63912: expected 6 fields, saw 13\\nSkipping line 65446: expected 6 fields, saw 7\\nSkipping line 65518: expected 6 fields, saw 12\\nSkipping line 68455: expected 6 fields, saw 13\\nSkipping line 69254: expected 6 fields, saw 7\\nSkipping line 69326: expected 6 fields, saw 12\\nSkipping line 72182: expected 6 fields, saw 13\\nSkipping line 73834: expected 6 fields, saw 7\\nSkipping line 73906: expected 6 fields, saw 12\\nSkipping line 74149: expected 6 fields, saw 13\\nSkipping line 75678: expected 6 fields, saw 7\\nSkipping line 75750: expected 6 fields, saw 12\\nSkipping line 77517: expected 6 fields, saw 13\\nSkipping line 78287: expected 6 fields, saw 7\\nSkipping line 78359: expected 6 fields, saw 12\\nSkipping line 80717: expected 6 fields, saw 13\\nSkipping line 81205: expected 6 fields, saw 7\\nSkipping line 81277: expected 6 fields, saw 12\\nSkipping line 83899: expected 6 fields, saw 13\\nSkipping line 84236: expected 6 fields, saw 7\\nSkipping line 84308: expected 6 fields, saw 12\\nSkipping line 85407: expected 6 fields, saw 13\\nSkipping line 86392: expected 6 fields, saw 7\\nSkipping line 86464: expected 6 fields, saw 12\\nSkipping line 86633: expected 6 fields, saw 13\\nSkipping line 86925: expected 6 fields, saw 7\\nSkipping line 86997: expected 6 fields, saw 12\\nSkipping line 87155: expected 6 fields, saw 13\\nSkipping line 87397: expected 6 fields, saw 7\\nSkipping line 87469: expected 6 fields, saw 12\\nSkipping line 88825: expected 6 fields, saw 13\\nSkipping line 89258: expected 6 fields, saw 7\\nSkipping line 89330: expected 6 fields, saw 12\\nSkipping line 90522: expected 6 fields, saw 13\\nSkipping line 91121: expected 6 fields, saw 7\\nSkipping line 91193: expected 6 fields, saw 12\\nSkipping line 92647: expected 6 fields, saw 13\\nSkipping line 93740: expected 6 fields, saw 7\\nSkipping line 93812: expected 6 fields, saw 12\\nSkipping line 93997: expected 6 fields, saw 13\\nSkipping line 94381: expected 6 fields, saw 7\\nSkipping line 94453: expected 6 fields, saw 12\\nSkipping line 96713: expected 6 fields, saw 13\\nSkipping line 97568: expected 6 fields, saw 7\\nSkipping line 97640: expected 6 fields, saw 12\\n'\n",
            "b'Skipping line 171799: expected 6 fields, saw 13\\nSkipping line 172262: expected 6 fields, saw 7\\nSkipping line 172334: expected 6 fields, saw 12\\nSkipping line 175240: expected 6 fields, saw 13\\nSkipping line 175649: expected 6 fields, saw 7\\nSkipping line 175721: expected 6 fields, saw 12\\nSkipping line 175998: expected 6 fields, saw 13\\nSkipping line 176051: expected 6 fields, saw 7\\nSkipping line 176123: expected 6 fields, saw 12\\nSkipping line 176276: expected 6 fields, saw 13\\nSkipping line 176979: expected 6 fields, saw 7\\nSkipping line 177051: expected 6 fields, saw 12\\nSkipping line 177249: expected 6 fields, saw 13\\nSkipping line 177449: expected 6 fields, saw 7\\nSkipping line 177521: expected 6 fields, saw 12\\nSkipping line 178149: expected 6 fields, saw 13\\nSkipping line 178385: expected 6 fields, saw 7\\nSkipping line 178457: expected 6 fields, saw 12\\nSkipping line 179517: expected 6 fields, saw 13\\nSkipping line 179708: expected 6 fields, saw 7\\nSkipping line 179780: expected 6 fields, saw 12\\nSkipping line 180575: expected 6 fields, saw 13\\nSkipping line 180702: expected 6 fields, saw 7\\nSkipping line 180774: expected 6 fields, saw 12\\nSkipping line 180915: expected 6 fields, saw 13\\nSkipping line 180999: expected 6 fields, saw 7\\nSkipping line 181071: expected 6 fields, saw 12\\nSkipping line 182637: expected 6 fields, saw 13\\nSkipping line 183416: expected 6 fields, saw 7\\nSkipping line 183488: expected 6 fields, saw 12\\n'\n"
          ],
          "name": "stderr"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bfoZos024k0g",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = df[['Question','Answer']]\n",
        "x = len(df)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "BtI-7ggCJFvi",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kzDx2L6K4rBJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "q_a_pairs= []\n",
        "for i in range(x):\n",
        "  if ((df['Question'][i] is not np.nan) and ((df['Answer'][i]) is not np.nan)):\n",
        "    q_a_pairs.append(df['Question'][i])\n",
        "    q_a_pairs.append(df['Answer'][i])\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Go6-j_dFI7q1",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YxSeBmrC4s7d",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!wget -c https://download.microsoft.com/download/E/5/F/E5FCFCEE-7005-4814-853D-DAA7C66507E0/WikiQACorpus.zip"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "O1dR2DSR4svo",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!unzip WikiQACorpus.zip"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "bn8rZOk8DNg-",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pandas as pd"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "fE_Y7SvmHbiz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df = pd.read_csv('WikiQACorpus/WikiQA-train.tsv', sep = '\\t')"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pe8fDkofHmmb",
        "colab_type": "code",
        "outputId": "4aa2596d-1c75-4b22-f295-39a868743c01",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 204
        }
      },
      "source": [
        "df.head()"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>QuestionID</th>\n",
              "      <th>Question</th>\n",
              "      <th>DocumentID</th>\n",
              "      <th>DocumentTitle</th>\n",
              "      <th>SentenceID</th>\n",
              "      <th>Sentence</th>\n",
              "      <th>Label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-0</td>\n",
              "      <td>A partly submerged glacier cave on Perito More...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-1</td>\n",
              "      <td>The ice facade is approximately 60 m high</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-2</td>\n",
              "      <td>Ice formations in the Titlis glacier cave</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-3</td>\n",
              "      <td>A glacier cave is a cave formed within the ice...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-4</td>\n",
              "      <td>Glacier caves are often called ice caves , but...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "  QuestionID  ... Label\n",
              "0         Q1  ...     0\n",
              "1         Q1  ...     0\n",
              "2         Q1  ...     0\n",
              "3         Q1  ...     1\n",
              "4         Q1  ...     0\n",
              "\n",
              "[5 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9uvXfS_mHoWW",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "y = len(df)\n",
        "q_a_pairs_2= []\n",
        "for i in range(y):\n",
        "  if ((df['Question'][i] is not np.nan) and ((df['Sentence'][i]) is not np.nan)):\n",
        "    q_a_pairs_2.append(df['Question'][i])\n",
        "    q_a_pairs_2.append(df['Sentence'][i])"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IETCyXGeIcsd",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "q_a_pairs_2"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "69S6JkfMI-ab",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "utJmVv81I-dP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!wget -c http://www.cs.cornell.edu/~cristian/data/cornell_movie_dialogs_corpus.zip"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "igO33l26erhJ",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "!unzip cornell_movie_dialogs_corpus.zip"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cDg_7JOAfWCB",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kDUeBZtVfWFE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h9ZeCcc-5iyL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import pickle\n",
        "with open('movie_titles_metadata.txt', 'r', encoding = \"ISO-8859-1\") as movies:\n",
        "\trom_movies = []\n",
        "\tfor movie in movies:\n",
        "\t\tparsed_movie = movie.split('+++$+++')\n",
        "\t\tif 'romance' in parsed_movie[-1]:\n",
        "\t\t\trom_movies.append(parsed_movie[0].strip())\n",
        "print(rom_movies)\n",
        "\n",
        "\n",
        "with open('movie_lines.txt', 'r', encoding = \"ISO-8859-1\") as lines:\n",
        "\trom_parsed_lines = []\n",
        "\tother_parsed_lines = []\n",
        "\tfor line in lines:\n",
        "\t\tparsed_line = line.split('+++$+++')\n",
        "\t\tif parsed_line[2].strip() in rom_movies:\n",
        "\t\t\trom_parsed_lines.append(parsed_line[-1].strip())\n",
        "\t\telse:\n",
        "\t\t\tother_parsed_lines.append(parsed_line[-1].strip())\n",
        "print(other_parsed_lines)\n",
        "\n",
        "\n",
        "with open('rom.pickle', 'wb') as rom:\n",
        "\tpickle.dump(rom_parsed_lines, rom)\n",
        "with open('other.pickle', 'wb') as other:\n",
        "\tpickle.dump(other_parsed_lines, other)\n",
        "\n",
        "\n",
        "\n",
        "with open('rom.pickle', 'rb') as rom:\n",
        "\trom_dialogue = pickle.load(rom)[:15000]\n",
        "\n",
        "catbot.train(rom_dialogue)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "48CmnZDBfWJI",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "EN_WHITELIST = '0123456789abcdefghijklmnopqrstuvwxyz ' # space is included in whitelist\n",
        "EN_BLACKLIST = '!\"#$%&\\'()*+,-./:;<=>?@[\\\\]^_`{|}~\\''\n",
        "\n",
        "limit = {\n",
        "        'maxq' : 25,\n",
        "        'minq' : 2,\n",
        "        'maxa' : 25,\n",
        "        'mina' : 2\n",
        "        }\n",
        "\n",
        "UNK = 'unk'\n",
        "VOCAB_SIZE = 8000"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1-ZcXynxfWMK",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_id2line():\n",
        "    lines=open('cornell movie-dialogs corpus/movie_lines.txt', encoding='utf-8', errors='ignore').read().split('\\n')\n",
        "    id2line = {}\n",
        "    for line in lines:\n",
        "        _line = line.split(' +++$+++ ')\n",
        "        if len(_line) == 5:\n",
        "            id2line[_line[0]] = _line[4]\n",
        "    return id2line\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Z2m9lZPLfWV3",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "out = get_id2line()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_lu0ilL9r69K",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "out"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "71rIe4IBwL5p",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def get_conversations():\n",
        "    conv_lines = open('cornell movie-dialogs corpus/movie_conversations.txt', encoding='utf-8', errors='ignore').read().split('\\n')\n",
        "    convs = [ ]\n",
        "    for line in conv_lines[:-1]:\n",
        "        _line = line.split(' +++$+++ ')[-1][1:-1].replace(\"'\",\"\").replace(\" \",\"\")\n",
        "        convs.append(_line.split(','))\n",
        "    return convs"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YZXi4HexwQd2",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "convs = get_conversations()"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "AvS3pFRawQgp",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "convs"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "B8CT8mB5zI3h",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "def gather_dataset(convs, id2line):\n",
        "    q_a_pairs_3 = [];\n",
        "\n",
        "    for conv in convs:\n",
        "        if len(conv) %2 != 0:\n",
        "            conv = conv[:-1]\n",
        "        for i in range(len(conv)):\n",
        "#             if i%2 == 0:\n",
        "            q_a_pairs_3.append(id2line[conv[i]])\n",
        "#             else:\n",
        "#                 answers.append(id2line[conv[i]])\n",
        "\n",
        "    return q_a_pairs_3\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nOPtICVvz2GP",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "q_a_pairs_3 = gather_dataset(convs, out)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mamehV_z1KTG",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17054
        },
        "outputId": "291d2998-2aee-4a67-bef3-e48b61e74514"
      },
      "source": [
        "q_a_pairs_3"
      ],
      "execution_count": 35,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Can we make this quick?  Roxanne Korrine and Andrew Barrett are having an incredibly horrendous public break- up on the quad.  Again.',\n",
              " \"Well, I thought we'd start with pronunciation, if that's okay with you.\",\n",
              " 'Not the hacking and gagging and spitting part.  Please.',\n",
              " \"Okay... then how 'bout we try out some French cuisine.  Saturday?  Night?\",\n",
              " \"You're asking me out.  That's so cute. What's your name again?\",\n",
              " 'Forget it.',\n",
              " \"No, no, it's my fault -- we didn't have a proper introduction ---\",\n",
              " 'Cameron.',\n",
              " \"The thing is, Cameron -- I'm at the mercy of a particularly hideous breed of loser.  My sister.  I can't date until she does.\",\n",
              " 'Seems like she could get a date easy enough...',\n",
              " 'Why?',\n",
              " 'Unsolved mystery.  She used to be really popular when she started high school, then it was just like she got sick of it or something.',\n",
              " 'Gosh, if only we could find Kat a boyfriend...',\n",
              " 'Let me see what I can do.',\n",
              " \"C'esc ma tete. This is my head\",\n",
              " \"Right.  See?  You're ready for the quiz.\",\n",
              " \"I don't want to know how to say that though.  I want to know useful things. Like where the good stores are.  How much does champagne cost?  Stuff like Chat.  I have never in my life had to point out my head to someone.\",\n",
              " \"That's because it's such a nice one.\",\n",
              " 'How is our little Find the Wench A Date plan progressing?',\n",
              " \"Well, there's someone I think might be --\",\n",
              " 'There.',\n",
              " 'Where?',\n",
              " 'You got something on your mind?',\n",
              " \"I counted on you to help my cause. You and that thug are obviously failing. Aren't we ever going on our date?\",\n",
              " 'You have my word.  As a gentleman',\n",
              " \"You're sweet.\",\n",
              " 'How do you get your hair to look like that?',\n",
              " \"Eber's Deep Conditioner every two days. And I never, ever use a blowdryer without the diffuser attachment.\",\n",
              " 'Sure have.',\n",
              " \"I really, really, really wanna go, but I can't.  Not unless my sister goes.\",\n",
              " \"She's not a...\",\n",
              " \"Lesbian?  No. I found a picture of Jared Leto in one of her drawers, so I'm pretty sure she's not harboring same-sex tendencies.\",\n",
              " \"So that's the kind of guy she likes? Pretty ones?\",\n",
              " \"Who knows?  All I've ever heard her say is that she'd dip before dating a guy that smokes.\",\n",
              " 'Hi.',\n",
              " 'Looks like things worked out tonight, huh?',\n",
              " 'You know Chastity?',\n",
              " 'I believe we share an art instructor',\n",
              " 'Have fun tonight?',\n",
              " 'Tons',\n",
              " 'I looked for you back at the party, but you always seemed to be \"occupied\".',\n",
              " 'I was?',\n",
              " 'Well, no...',\n",
              " \"Then that's all you had to say.\",\n",
              " 'But',\n",
              " 'You always been this selfish?',\n",
              " 'Then Guillermo says, \"If you go any lighter, you\\'re gonna look like an extra on 90210.\"',\n",
              " 'No...',\n",
              " 'do you listen to this crap?',\n",
              " 'What crap?',\n",
              " \"Me.  This endless ...blonde babble. I'm like, boring myself.\",\n",
              " 'Thank God!  If I had to hear one more story about your coiffure...',\n",
              " \"I figured you'd get to the good stuff eventually.\",\n",
              " 'What good stuff?',\n",
              " 'The \"real you\".',\n",
              " 'Like my fear of wearing pastels?',\n",
              " 'I\\'m kidding.  You know how sometimes you just become this \"persona\"?  And you don\\'t know how to quit?',\n",
              " 'No',\n",
              " 'Wow',\n",
              " \"Let's go.\",\n",
              " 'She okay?',\n",
              " 'I hope so.',\n",
              " 'They do to!',\n",
              " 'They do not!',\n",
              " 'Did you change your hair?',\n",
              " 'No.',\n",
              " 'Where did he go?  He was just here.',\n",
              " 'Who?',\n",
              " 'Great',\n",
              " 'Would you mind getting me a drink, Cameron?',\n",
              " \"He practically proposed when he found out we had the same dermatologist. I mean. Dr. Bonchowski is great an all, but he's not exactly relevant party conversation.\",\n",
              " 'Is he oily or dry?',\n",
              " \"Bianca, I don't think the highlights of dating Joey Dorsey are going to include door-opening and coat-holding.\",\n",
              " \"Sometimes I wonder if the guys we're supposed to want to go out with are the ones we actually want to go out with, you know?\",\n",
              " 'I have to be home in twenty minutes.',\n",
              " \"I don't have to be home 'til two.\",\n",
              " \"You think you ' re the only sophomore at the prom?\",\n",
              " 'I did.',\n",
              " \"It's more\",\n",
              " 'Expensive?',\n",
              " \"Exactly  So, you going to Bogey Lowenbrau's thing on Saturday?\",\n",
              " 'Hopefully.',\n",
              " 'So yeah, I\\'ve got the Sears catalog thing going -- and the tube sock gig \" that\\'s gonna be huge.  And then I\\'m up for an ad for Queen Harry next week.',\n",
              " 'Queen Harry?',\n",
              " 'Neat...',\n",
              " \"My agent says I've got a good shot at being the Prada guy next year.\",\n",
              " 'Hey, sweet cheeks.',\n",
              " 'Hi, Joey.',\n",
              " 'Listen, I want to talk to you about the prom.',\n",
              " \"You know the deal.  I can ' t go if Kat doesn't go --\",\n",
              " \"Where've you been?\",\n",
              " 'Nowhere... Hi, Daddy.',\n",
              " \"I have the potential to smack the crap out of you if you don't get out of my way.\",\n",
              " 'Can you at least start wearing a bra?',\n",
              " \"Oh my God, does this mean you're becoming normal?\",\n",
              " \"It means that Gigglepuss is playing at Club Skunk and we're going.\",\n",
              " \"Oh, I thought you might have a date  I don't know why I'm bothering to ask, but are you going to Bogey Lowenstein's party Saturday night?\",\n",
              " 'What do you think?',\n",
              " \"You're ruining my life'  Because you won't be normal, I can't be normal.\",\n",
              " \"What's normal?\",\n",
              " \"Can't you forget for just one night that you're completely wretched?\",\n",
              " \"At least I'm not a clouted fen- sucked hedge-pig.\",\n",
              " \"Like I'm supposed to know what that even means.\",\n",
              " \"It's Shakespeare.  Maybe you've heard of him?\",\n",
              " 'You are so completely unbalanced.',\n",
              " 'Can we go now?',\n",
              " 'Bianca, I need to talk to you -- I need to tell you --',\n",
              " \"I really don't think I need any social advice from you right now.\",\n",
              " \"I don't get you.  You act like you're too good for any of this, and then you go totally apeshit when you get here.\",\n",
              " \"You're welcome.\",\n",
              " \"Listen, I know you hate having to sit home because I'm not Susie High School.\",\n",
              " 'Like you care.',\n",
              " \"I do care. But I'm a firm believer in doing something for your own reasons, not someone else ' s .\",\n",
              " \"I wish I had that luxury. I'm the only sophomore that got asked to the prom and I can't go, because you won ' t.\",\n",
              " 'Joey never told you we went out, did he?',\n",
              " 'What?',\n",
              " 'In 9th.  For a month',\n",
              " 'Why?',\n",
              " 'He was, like, a total babe',\n",
              " 'But you hate Joey',\n",
              " 'Now I do.  Back then, was a different story.',\n",
              " 'As in...',\n",
              " 'He said everyone was doing it.  So I did it.',\n",
              " 'You did what?',\n",
              " 'But',\n",
              " 'After that, I swore I\\'d never do anything just because \"everyone else\" was doing it.  And I haven\\'t since. Except for Bogey\\'s party, and my stunning gastro-intestinal display --',\n",
              " \"Why didn't you tell me?\",\n",
              " 'I wanted to let you make up your own mind about him.',\n",
              " \"That's not\",\n",
              " \"I'm not stupid enough to repeat your mistakes.\",\n",
              " 'I guess I thought I was protecting you.',\n",
              " \"God, you're just like him! Just keep me locked away in the dark, so I can't experience anything for myself\",\n",
              " \"Not all experiences are good, Bianca. You can't always trust the people you want to.\",\n",
              " \"I guess I'll never know, will I?\",\n",
              " 'You looked beautiful last night, you know.',\n",
              " 'So did you',\n",
              " 'Let go!',\n",
              " 'You set me up.',\n",
              " 'I just wanted --',\n",
              " 'What? To completely damage me?  To send me to therapy forever? What?',\n",
              " 'Is that woman a complete fruit-loop or is it just me?',\n",
              " \"It's just you.\",\n",
              " 'Patrick -- is that- a.',\n",
              " 'Perm?',\n",
              " \"Now don't get upset. Daddy, but there's this boy... and I think he might ask...\",\n",
              " \"No! You're not dating until your sister starts dating.  End of discussion.\",\n",
              " 'What if she never starts dating?',\n",
              " \"Then neither will you.  And I'll get to sleep at night.\",\n",
              " \"But she doesn't want to date.\",\n",
              " 'Exactly my point',\n",
              " 'Daddy, I --',\n",
              " \"And where're you going?\",\n",
              " 'If you must know, we were attempting to go to a small study group of friends.',\n",
              " 'Otherwise known as an orgy?',\n",
              " 'Daddy, people expect me to be there!',\n",
              " \"If Kat's not going, you're not going.\",\n",
              " \"Oh, God.  It's starting.\",\n",
              " \"It's just a party. Daddy.\",\n",
              " 'Wear the belly before you go.',\n",
              " 'Daddy, no!',\n",
              " \"Promise me you won't talk to any boys unless your sister is present.\",\n",
              " 'Why?',\n",
              " \"Daddy, I want to discuss the prom with you. It's tomorrow night --\",\n",
              " 'The prom?  Kat has a date?',\n",
              " 'No, but',\n",
              " \"It's that hot rod Joey, right? That ' s who you want me to bend my rules for?\",\n",
              " 'He\\'s not a \"hot rod\".  Whatever that is.',\n",
              " \"You're not going unless your sister goes.  End of story.\",\n",
              " \"I'm missing something.\",\n",
              " \"I have a date, Daddy.  And he ' s not a captain of oppression like some men we know.\",\n",
              " 'Always a pleasure, Brucie.',\n",
              " \"Didn't have you pegged for a Gigglepuss fan.  Aren't they a little too pre-teen belly-button ring for you?\",\n",
              " 'Fan of a fan.  You see a couple of minors come in?',\n",
              " 'Never',\n",
              " 'Padua girls.  One tall, decent body. The other one kinda short and undersexed?',\n",
              " \"Just sent 'em through.\",\n",
              " 'You the new guy?',\n",
              " 'So they tell me...',\n",
              " 'So -- which Dakota you from?',\n",
              " \"North, actually.  How'd you   ?\",\n",
              " 'I was kidding. People actually live there?',\n",
              " \"Yeah.  A couple.  We're outnumbered by the cows, though.\",\n",
              " 'How many people were in your old school?',\n",
              " 'Thirty-two.',\n",
              " 'Get out!',\n",
              " 'How many people go here?',\n",
              " \"That I'm used to.\",\n",
              " 'Yeah, but these guys have never seen a horse.  They just jack off to Clint Eastwood.',\n",
              " 'That girl -- I --',\n",
              " 'You burn, you pine, you perish?',\n",
              " 'Who is she?',\n",
              " \"Bianca Stratford.  Sophomore. Don't even think about it\",\n",
              " 'Why not?',\n",
              " \"I could start with your haircut, but it doesn't matter.  She's not allowed to date until her older sister does.  And that's an impossibility.\",\n",
              " 'Why do girls like that always like guys like that?',\n",
              " \"Because they're bred to.  Their mothers liked guys like that, and their grandmothers before them. Their gene pool is rarely diluted.\",\n",
              " 'He always have that shit-eating grin?',\n",
              " \"Joey Dorsey?  Perma-shit-grin.  I wish I could say he's a moron, but he's number twelve in the class.  And a model.  Mostly regional stuff, but he's rumored to have a big tube sock ad coming out.\",\n",
              " 'You know French?',\n",
              " \"Sure do ... my Mom's from Canada\",\n",
              " 'Guess who just signed up for a tutor?',\n",
              " \"You mean I'd get a chance to talk to her?\",\n",
              " 'Yeah, just a minor encounter with the shrew.',\n",
              " \"That's her?  Bianca's sister?\",\n",
              " 'I teach her French, get to know her, dazzle her with charm and she falls in love with me.',\n",
              " \"Unlikely, but even so, she still can't go out with you.  So what's the point?\",\n",
              " 'What about him?',\n",
              " 'You wanna go out with him?',\n",
              " \"What makes you think he'll do it?\",\n",
              " 'He seems like he thrives on danger',\n",
              " \"No kidding.  He's a criminal.  I heard he lit a state trooper on fire.  He just got out of Alcatraz...\",\n",
              " 'They always let felons sit in on Honors Biology?',\n",
              " \"I'm serious, man, he's whacked.  He sold his own liver on the black market so he could buy new speakers.\",\n",
              " \"Forget his reputation.  Do you think we've got a plan or not?\",\n",
              " \"Did she actually say she'd go out with you?\",\n",
              " \"That's what I just said\",\n",
              " \"You know, if you do go out with Bianca, you'd be set.  You'd outrank everyone. Strictly A-list.  With me by your side.\",\n",
              " 'I thought you hated those people.',\n",
              " 'You got him involved?',\n",
              " \"Like we had a choice?  Besides -- when you let the enemy think he's orchestrating the battle, you're in a position of power. We let him pretend he's calling the shots, and while he's busy setting up the plan, you have time to woo Bianca.\",\n",
              " 'This is it.  A golden opportunity. Patrick can ask Katarina to the party.',\n",
              " \"In that case, we'll need to make it a school-wide blow out.\",\n",
              " 'Will Bogey get bent?',\n",
              " \"Are you kidding?  He'll piss himself with joy.  He's the ultimate kiss ass.\",\n",
              " 'Number one.  She hates smokers',\n",
              " \"It's a lung cancer issue\",\n",
              " 'Her favorite uncle',\n",
              " 'Dead at forty-one.',\n",
              " \"He's pretty!\",\n",
              " \"Okay!  I wasn't sure\",\n",
              " 'Assail your ears for one night.',\n",
              " \"It's her favorite band.\",\n",
              " 'You told me that part already.',\n",
              " \"Hell, I've just been going over the whole thing in my head and -\",\n",
              " 'Extremely unfortunate maneuver.',\n",
              " \"The hell is that?  What kind of 'guy just picks up a girl and carries her away while you're talking to her?\",\n",
              " \"Buttholus extremus.  But hey, you're making progress.\",\n",
              " \"No, I ' m not.\",\n",
              " 'You humiliated the woman! Sacrifice yourself on the altar of dignity and even the score.',\n",
              " \"Best case scenario, you're back on the payroll for awhile.\",\n",
              " 'And he means that strictly in a non- prison-movie type of way.',\n",
              " \"Yeah -- we'll see.\",\n",
              " \"What've you got for me?\",\n",
              " \"I've retrieved certain pieces of information on Miss Katarina Stratford I think you'll find helpful.\",\n",
              " 'Okay -- Likes:  Thai food, feminist prose, and \"angry, stinky girl music of the indie-rock persuasion\".',\n",
              " \"So what does that give me?  I'm supposed to buy her some noodles and a book and sit around listening to chicks who can't play their instruments?\",\n",
              " 'Gigglepuss is playing there tomorrow night.',\n",
              " \"Don't make me do it, man\",\n",
              " \"Cameron, I'm a little busy\",\n",
              " \"It's off. The whole thing.\",\n",
              " \"What 're you talking about?\",\n",
              " \"She's partial to Joey, not me\",\n",
              " 'Cameron -- do you like the girl?',\n",
              " 'Sure',\n",
              " \"What'd you do to her?\",\n",
              " \"I don ' t know.  I decided not to nail her when she was too drunk to remember it.\",\n",
              " \"She hates you with the fire of a thousand suns .  That's a direct quote\",\n",
              " \"She just needs time to cool off I'll give it a day.\",\n",
              " \"You makin' any headway?\",\n",
              " 'She kissed me.',\n",
              " \"What's the worst?\",\n",
              " 'You get the girl.',\n",
              " \"The vintage look is over, Kat. Haven't you been reading your Sassy?\",\n",
              " 'Yeah, and I noticed the only part of you featured in your big Kmart spread was your elbow.  Tough break.',\n",
              " 'Hey -- do you mind?',\n",
              " 'Not at all',\n",
              " 'Where ya goin?',\n",
              " 'Away.',\n",
              " 'Leave my sister alone.',\n",
              " 'And why would I do that?',\n",
              " 'Yeah',\n",
              " 'What do you think?',\n",
              " 'Two legs, nice rack...',\n",
              " 'Yeah, whatever.  I want you to go out with her.',\n",
              " \"Sure, Sparky.  I'll get right on it.\",\n",
              " 'You just said',\n",
              " 'You need money to take a girl out',\n",
              " \"But you'd go out with her if you had the cake?\",\n",
              " 'You got it, Verona.  I pick up the tab, you do the honors.',\n",
              " \"You're gonna pay me to take out some girl?\",\n",
              " \"I can't date her sister until that one gets a boyfriend.  And that's the catch. She doesn't want a boyfriend.\",\n",
              " 'How much?',\n",
              " \"I can't take a girl like that out on twenty bucks.\",\n",
              " 'Fine, thirty.',\n",
              " \"Take it or leave it.  This isn't a negotiation.\",\n",
              " \"Fifty, and you've got your man.\",\n",
              " 'When I shell out fifty, I expect results.',\n",
              " \"I'm on it\",\n",
              " \"Watching the bitch trash my car doesn't count as a date.\",\n",
              " 'I got her under control. She just acts crazed in public to keep up the image.',\n",
              " 'I just upped my price',\n",
              " 'What?',\n",
              " 'A hundred bucks a date.',\n",
              " 'Forget it.',\n",
              " \"It's about time.\",\n",
              " \"A deal's a deal.\",\n",
              " \"How'd you do it?\",\n",
              " 'Do what?',\n",
              " \"I don't know, Dorsey. ..the limo.-the flowers.  Another hundred for the tux --\",\n",
              " \"Enough with the Barbie n' Ken shit. I know.\",\n",
              " 'Hey.',\n",
              " 'Are you lost?',\n",
              " 'Nope - just came by to chat',\n",
              " \"We don't chat.\",\n",
              " \"Well, actually, I thought I'd run an idea by you.  You know, just to see if you're interested.\",\n",
              " \"We're not.\",\n",
              " \"But she can't go out with you because her sister is this insane head case and no one will go out with her. right?\",\n",
              " 'Does this conversation have a purpose?',\n",
              " \"I hear you're helpin' Verona.\",\n",
              " \"Uh,  yeah.  We're old friend*\",\n",
              " 'You and Verona?',\n",
              " 'What?  We took bathes together when we were kids.',\n",
              " \"You better not fuck this up.  I'm heavily invested.\",\n",
              " \"Hey -- it's all for the higher good right?\",\n",
              " \"Who's that?\",\n",
              " 'Patrick Verona   Random skid.',\n",
              " \"That's Pat Verona? The one who was gone for a year? I heard he was doing porn movies.\",\n",
              " \"I'm sure he's completely incapable of doing anything that interesting.\",\n",
              " 'He always look so',\n",
              " 'Block E?',\n",
              " 'Mandella, eat.  Starving yourself is a very slow way to die.',\n",
              " 'Just a little.',\n",
              " \"What's this?\",\n",
              " 'An attempted slit.',\n",
              " \"I realize that the men of this fine institution are severely lacking, but killing yourself so you can be with William Shakespeare is beyond the scope of normal teenage obsessions.  You're venturing far past daytime talk show fodder and entering the world of those who need very expensive therapy.\",\n",
              " \"But imagine the things he'd say during sex.\",\n",
              " 'The people at this school are so incredibly foul.',\n",
              " \"You could always go with me.  I'm sure William has some friends.\",\n",
              " 'So he has this huge raging fit about Sarah Lawrence and insists that I go to his male-dominated, puking frat boy, number one golf team school. I have no say at all.',\n",
              " 'William would never have gone to a state school.',\n",
              " \"William didn't even go to high school\",\n",
              " \"That's never been proven\",\n",
              " \"I appreciate your efforts toward a speedy death, but I'm consuming.  Do you mind?\",\n",
              " 'Does it matter?',\n",
              " \"You think this'll work?\",\n",
              " 'No fear.',\n",
              " \"What'd he say?\",\n",
              " 'Who cares?',\n",
              " 'You went to the party?  I thought we were officially opposed to suburban social activity.',\n",
              " \"I didn't have a choice.\",\n",
              " \"You didn't have a choice?  Where's Kat and what have you done with her?\",\n",
              " 'I did Bianca a favor and it backfired.',\n",
              " \"You didn't\",\n",
              " 'I got drunk.  I puked.  I got rejected. It was big fun.',\n",
              " 'Can you even imagine?  Who the hell would go to this a bastion of commercial excess?',\n",
              " \"Well, I guess we're not, since we don't have dates .\",\n",
              " 'Listen to you!  You sound like Betty, all pissed off because Archie is taking Veronica.',\n",
              " \"Okay, okay, we won't go.  It's not like I have a dress anyway\",\n",
              " \"You ' re looking at this from the wrong perspective.  We're making a statement.\",\n",
              " 'Oh, good.  Something new and different for us.',\n",
              " 'Have you seen him?',\n",
              " 'Who?',\n",
              " 'William - he asked me to meet him here.',\n",
              " \"Oh, honey -- tell me we haven't' progressed to full-on hallucinations.\",\n",
              " \"I mean Wo-man.  How ya doin'?\",\n",
              " 'Sweating like a pig, actually.  And yourself?',\n",
              " \"There's a way to get a guy's attention.\",\n",
              " 'My mission in life.',\n",
              " 'Pick you up Friday, then',\n",
              " 'Oh, right.  Friday.',\n",
              " \"The night I take you to places you've never been before.  And back.\",\n",
              " 'Like where?  The 7-Eleven on Burnside? Do you even know my name, screwboy?',\n",
              " \"You hate me don't you?\",\n",
              " \"I don't really think you warrant that strong an emotion.\",\n",
              " \"Then say you'll spend Dollar Night at the track with me.\",\n",
              " 'And why would I do that?',\n",
              " 'Come on -- the ponies, the flat beer, you with money in your eyes, me with my hand on your ass...',\n",
              " 'You -- covered in my vomit.',\n",
              " 'Are you following me?',\n",
              " \"I was in the laundromat. I saw your car. Thought I'd say hi.\",\n",
              " \"You're not a big talker, are you?\",\n",
              " \"Depends on the topic. My fenders don't really whip me into a verbal frenzy.\",\n",
              " 'hey.  Great show, huh?',\n",
              " '',\n",
              " 'Excuse me?',\n",
              " \"That's what you want, isn't it?\",\n",
              " \"You know, these guys are no Bikini Kill or The Raincoats, but they're right up there.\",\n",
              " 'You know who The Raincoats are?',\n",
              " \"What's this?\",\n",
              " '\"I\\'m getting trashed, man.\" Isn\\'t that what you\\'re supposed to do at a party?',\n",
              " 'I say, do what you wanna do.',\n",
              " \"Funny, you're the only one\",\n",
              " 'Okay?',\n",
              " \"I'm fine. I'm\",\n",
              " \"You're not okay.\",\n",
              " 'I just need to lie down for awhile',\n",
              " \"Uh, uh. You lie down and you'll go to sleep\",\n",
              " 'I know, just let me sleep',\n",
              " 'This is so patronizing.',\n",
              " \"Leave it to you to use big words when you're shitfaced.\",\n",
              " \"Why 're you doing this?\",\n",
              " 'I told you',\n",
              " \"You don't care if I die\",\n",
              " 'Sure, I do',\n",
              " 'Why?',\n",
              " \"Because then I'd have to start taking out girls who like me.\",\n",
              " 'Like you could find one',\n",
              " \"See that?  Who needs affection when I've got blind hatred?\",\n",
              " \"Why'd you let him get to you?\",\n",
              " 'Who?',\n",
              " 'Dorsey.',\n",
              " 'I hate him.',\n",
              " \"I know.  It'd have to be a pretty big deal to get you to mainline tequila. You don't seem like the type.\",\n",
              " 'Hey man. . .  You don \\' t think I can be \"cool\"?  You don\\'t think I can be \"laid back\" like everyone else?',\n",
              " 'I thought you were above all that',\n",
              " 'You know what they say',\n",
              " 'Kat! Wake up!',\n",
              " 'What?',\n",
              " \"And I'm in control of it.\",\n",
              " \"But it's Gigglepuss - I know you like them.  I saw you there.\",\n",
              " 'When you were gone last year -- where were you?',\n",
              " 'Busy',\n",
              " 'Were you in jail?',\n",
              " 'Maybe.',\n",
              " \"No, you weren't\",\n",
              " \"Then why'd you ask?\",\n",
              " 'I should do this.',\n",
              " 'Do what?',\n",
              " 'Start a band?',\n",
              " \"My father wouldn't approve of that that\",\n",
              " 'Oh, so now you think you know me?',\n",
              " \"I'm gettin' there\",\n",
              " \"So what ' s up with your dad?  He a pain in the ass?\",\n",
              " \"He just wants me to be someone I'm not.\",\n",
              " 'Who?',\n",
              " 'BIANCA',\n",
              " 'Excuse me, have you seen The Feminine Mystique?  I lost my copy.',\n",
              " 'What are you doing here?',\n",
              " 'I heard there was a poetry reading.',\n",
              " \"You 're so --\",\n",
              " 'Wholesome.',\n",
              " 'Unwelcome.',\n",
              " 'Unwelcome?  I guess someone still has her panties in a twist.',\n",
              " \"Don't for one minute think that you had any effect whatsoever on my panties.\",\n",
              " 'So what did I have an effect on ?',\n",
              " 'Other than my upchuck reflex? Nothing.',\n",
              " 'He left!  I sprung the dickhead and he cruised on me.',\n",
              " 'Look up, sunshine',\n",
              " \"I guess I never told you I'm afraid of heights.\",\n",
              " \"C'mon.  It's not that bad\",\n",
              " 'Put your right foot there --',\n",
              " \"Forget it.  I'm stayin'.\",\n",
              " 'You want me to climb up and show you how to get down?',\n",
              " 'Maybe.',\n",
              " 'The Partridge Family?',\n",
              " 'I figured it had to be something ridiculous to win your respect.  And piss you off.',\n",
              " 'Good call.',\n",
              " \"So how'd you get Chapin to look the other way?\",\n",
              " 'A soft side? Who knew?',\n",
              " \"Yeah, well, don't let it get out\",\n",
              " \"So what's your excuse?\",\n",
              " 'Acting the way we do.',\n",
              " 'Yes',\n",
              " \"I don't like to do what people expect. Then they expect it all the time and they get disappointed when you change.\",\n",
              " \"So if you disappoint them from the start, you're covered?\",\n",
              " 'Something like that',\n",
              " 'Then you screwed up',\n",
              " 'How?',\n",
              " 'You up for it?',\n",
              " 'For. . . ?',\n",
              " 'State trooper?',\n",
              " 'Fallacy.',\n",
              " 'The duck?',\n",
              " 'Hearsay.',\n",
              " 'Tell me something true.',\n",
              " 'I hate peas.',\n",
              " 'No -- something real.  Something no one else knows.',\n",
              " \"You're sweet.  And sexy.  And completely hot for me.\",\n",
              " 'What?',\n",
              " 'No one else knows',\n",
              " \"You're amazingly self-assured. Has anyone ever told you that?\",\n",
              " 'Go to the prom with me',\n",
              " 'Is that a request or a command?',\n",
              " 'You know what I mean',\n",
              " 'No.',\n",
              " 'No what?',\n",
              " \"No, I won't go with you\",\n",
              " 'Why not?',\n",
              " 'Create a little drama?  Start a new rumor?  What?',\n",
              " 'So I have to have a motive to be with you?',\n",
              " 'You tell me.',\n",
              " 'You need therapy.  Has anyone ever told you that?',\n",
              " 'Answer the question, Patrick',\n",
              " \"Nothing!  There's nothing in it for me. Just the pleasure of your company.\",\n",
              " \"How'd you get a tux at the last minute?\",\n",
              " \"It's Scurvy's.  His date got convicted. Where'd you get the dress?\",\n",
              " \"It's just something I had.  You know\",\n",
              " 'Oh huh',\n",
              " \"My grandmother's .\",\n",
              " 'What?',\n",
              " \"That ' s completely adorable!\",\n",
              " 'It gets worse -- you still have your freshman yearbook?',\n",
              " 'Wait I...',\n",
              " 'You were paid to take me out!  By -- the one person I truly hate.  I knew it was a set-up!',\n",
              " \"It wasn't like that.\",\n",
              " 'Really?  What was it like?  A down payment now, then a bonus for sleeping with me?',\n",
              " 'A Fender Strat. You bought this?',\n",
              " 'I thought you could use it. When you start your band.',\n",
              " 'Besides, I had some extra cash. Some asshole paid me to take out a really great girl.',\n",
              " 'Is that right?',\n",
              " 'Why is my veggie burger the only burnt object on this grill?',\n",
              " 'Because I like to torture you.',\n",
              " 'Oh, Bianca?  Can you get me my freshman yearbook?',\n",
              " \"Don ' t you even dare. . .\",\n",
              " 'I know.',\n",
              " 'I thought we decided you were going to school here.  At U of 0.',\n",
              " 'This from someone whose diary is devoted to favorite grooming tips?',\n",
              " 'Enough!',\n",
              " 'My insurance does not cover PMS',\n",
              " 'Then tell them I had a seizure.',\n",
              " 'Is this about Sarah Lawrence? You punishing me?',\n",
              " 'I thought you were punishing me.',\n",
              " \"Why can't we agree on this?\",\n",
              " \"Because you're making decisions for me.\",\n",
              " \"As a parent, that's my right\",\n",
              " \"So what I want doesn't matter?\",\n",
              " \"You're eighteen.  You don't know what you want.  You won't know until you're forty-five and you don't have it.\",\n",
              " 'I want to go to an East Coast school! I want you to trust me to make my own choices.  I want --',\n",
              " 'Was that your sister?',\n",
              " 'Yeah.  She left with some bikers Big ones.  Full of sperm.',\n",
              " \"I don't understand the allure of dehydrated food.  Is this something I should be hip to?\",\n",
              " 'No, Daddy.',\n",
              " 'So tell me about this dance. Was it fun?',\n",
              " 'Parts of it.',\n",
              " 'Which parts?',\n",
              " 'The part where Bianca beat the hell out of some guy.',\n",
              " 'Bianca did what?',\n",
              " \"What's the matter?  Upset that I rubbed off on her?\",\n",
              " \"You know, fathers don't like to admit that their daughters are capable of running their own lives.  It means we've become spectators.  Bianca still lets me play a few innings.  You've had me on the bleachers for years.  When you go to Sarah Lawrence, I won't even be able to watch the game.\",\n",
              " 'When I go?',\n",
              " \"Katarina Stratford.  My, my.  You've been terrorizing Ms. Blaise again.\",\n",
              " 'Expressing my opinion is not a terrorist action.',\n",
              " \"Well, yes, compared to your other choices of expression this year, today's events are quite mild.  By the way, Bobby Rictor's gonad retrieval operation went quite well, in case you're interested.\",\n",
              " 'I still maintain that he kicked himself in the balls.  I was merely a spectator.',\n",
              " 'Tempestuous?',\n",
              " 'No ... I believe \"heinous bitch\" is the term used most often.',\n",
              " 'Am I supposed to feel better? Like, right now?  Or do I have some time to think about it?',\n",
              " 'Just smack her now.',\n",
              " 'Hey there.  Tired of breathing?',\n",
              " 'Hi.',\n",
              " 'Cool pictures.  You a fan?',\n",
              " 'Yeah.  I guess.',\n",
              " 'You think?',\n",
              " 'Oh yeah.',\n",
              " 'Macbeth, right?',\n",
              " 'Right.',\n",
              " 'Kat a fan, too?',\n",
              " 'Yeah...',\n",
              " 'Say it',\n",
              " 'What?',\n",
              " 'What plan?',\n",
              " 'The situation is, my man Cameron here has a major jones for Bianca Stratford.',\n",
              " \"I think I speak correctly when I say that Cameron's love is pure.  Purer than say -- Joey Dorsey's.\",\n",
              " \"Dorsey can plow whoever he wants. I'm just in this for the cash.\",\n",
              " \"That's where we can help you.  With Kat.\",\n",
              " 'So Dorsey can get the girl?',\n",
              " 'You two are gonna help me tame the wild beast?',\n",
              " \"We're your guys.\",\n",
              " 'What?!',\n",
              " 'Good enough.',\n",
              " 'Are you telling me I\\'m a -  \"non-smoker\"?',\n",
              " 'Just for now.',\n",
              " 'Ever been to Club Skunk?',\n",
              " 'Yeah.',\n",
              " 'I prefer to think of it simply as an alternative to what the law allows.',\n",
              " \"I'm likin' you guys better\",\n",
              " 'So you got cozy with she who stings?',\n",
              " \"No - I've got a sweet-payin' job that I'm about to lose.\",\n",
              " \"You were right. She's still pissed.\",\n",
              " 'Sweet love, renew thy force!',\n",
              " 'I missed you.',\n",
              " 'It says here you exposed yourself to a group of freshmen girls.',\n",
              " 'It was a bratwurst.  I was eating lunch.',\n",
              " 'With the teeth of your zipper?',\n",
              " \"I don't understand, Patrick.  You haven't done anything asinine this week. Are you not feeling well?\",\n",
              " 'Touch of the flu.',\n",
              " \"Why don't we discuss your driving need to be a hemorrhoid?\",\n",
              " \"What's to discuss?\",\n",
              " \"You weren't abused, you aren't stupid, and as far as I can tell, you're only slightly psychotic -- so why is it that you're such a fuck-up?\",\n",
              " \"Well, you know -- there's the prestige of the job title... and the benefits package is pretty good...\",\n",
              " \"You're completely demented.\",\n",
              " 'See you next week!',\n",
              " 'In the microwave.',\n",
              " 'Make anyone cry today?',\n",
              " \"What's a synonym for throbbing?\",\n",
              " 'Sarah Lawrence is on the other side of the country.',\n",
              " 'Jesus!  Can a man even grab a sandwich before you women start dilating?',\n",
              " 'Tumescent!',\n",
              " 'Would you rather be ravished by a pirate or a British rear admiral?',\n",
              " 'Pirate -- no question.',\n",
              " \"They'll dance, they'll kiss, they'll come home.  Let her go.\",\n",
              " \"Kissing?  Is that what you think happens?  Kissing isn't what keeps me up to my elbows in placenta all day.\",\n",
              " \"What do you wanna watch?  We've got crap, crap, crap or crap\",\n",
              " 'Dr. Ruth?',\n",
              " 'Have a great time, honey!',\n",
              " 'But -- who -- what --?',\n",
              " 'What just happened?',\n",
              " 'Your daughters went to the prom.',\n",
              " 'Did I have anything to say about it?',\n",
              " 'Absolutely not.',\n",
              " 'I never seen heat like this!  Not even in Las Minas!',\n",
              " \"The water's going putrid in the barrels.\",\n",
              " 'What are you listening to, chicken ass?',\n",
              " \"Ah, leave him alone.  He's doing no harm.\",\n",
              " \"He's the devil's child...\",\n",
              " \"We'll all go crazy...\",\n",
              " 'We should have seen land.',\n",
              " \"We left three weeks ago, Alonso. Can't be that near.\",\n",
              " 'You say Asia can be found by sailing west?',\n",
              " 'Yes, your Eminence.  The voyage should not take more than six or seven weeks.',\n",
              " 'Unfortunately, Don Colon, that is precisely where our opinions differ...  Are you familiar with the work of Aristotle?  Erathostene?  Ptolemeus?',\n",
              " 'I am, Your Eminence',\n",
              " 'Senor Colon, an experienced captain such as yourself will understand our concern with the crew.  I am not willing to have on my conscience the loss of men who would have relied upon our judgment.',\n",
              " 'Excellency, you are right.',\n",
              " 'Your Eminence, there is only one way to settle the matter.  And that is to make the journey.  I am ready to risk my life to prove it possible.',\n",
              " 'Your life, and that of others!',\n",
              " 'Trade, Your Excellency.  According to Marco Polo, the Kingdom of China is one of the richest of the world. Even the meanest buildings are roofed with gold.',\n",
              " 'Is that all that interests you? Gold?',\n",
              " 'If God intended our proximity to Asia, do you believe he would have waited for you to show it to the world?',\n",
              " \"Did He not choose a carpenter's son to reveal Himself to the world?\",\n",
              " \"Don't you realize your words could be considered heretical?\",\n",
              " 'Blind faith is what I consider heresy!',\n",
              " 'Asia can be found to the west -- and I will prove it.',\n",
              " 'IF-GOD-WILLS-IT!',\n",
              " \"The State has some reason to be interested in this man's proposition, Your Eminence...\",\n",
              " 'The Judgment is ours!',\n",
              " 'He is a mercenary!  Did he not already try to convince the King of Portugal of his absurd notions?',\n",
              " 'Indeed.  The world is full of mercenaries -- and states often make use of them, when it benefits them.  My only concern is the welfare and prosperity of Spain.',\n",
              " \"It won't be easy to get rid of your prophet now, Don Sanchez.\",\n",
              " 'On the contrary, Your Eminence.  It seems to me the man is preparing his own cross.',\n",
              " 'You can see for yourself.',\n",
              " 'What a tragedy... what a waste of a life...',\n",
              " 'I could be gone for years.',\n",
              " 'I know.',\n",
              " \"I haven't given you much of a life.\",\n",
              " \"Well... that's true.  I have a child by a man who won't marry me!  Who's always leaving...\",\n",
              " 'Are we going to argue?',\n",
              " \"I'd love to argue with you sometimes.  But you're never here!\",\n",
              " 'Perhaps I was never meant to live with a woman...',\n",
              " 'I find that hard to believe.',\n",
              " 'She said yes.',\n",
              " 'Thank God...',\n",
              " \"I'm not asking you to swear to anything.\",\n",
              " \"I don't want you to wait for me.\",\n",
              " 'Beatrix, I want to ask you something.',\n",
              " \"You don't usually ask.\",\n",
              " \"God... you're so beautiful!  I can't believe no other man has ever taken you away from me...\",\n",
              " \"They tried... but I didn't let them.\",\n",
              " 'They took everything...',\n",
              " \"Not everything... Do you think I care?  I'm a free man again.  Riches don't make a man rich, they only make him busier...\",\n",
              " \"Can't you stay with us a little?\",\n",
              " 'I am busy inside.',\n",
              " 'What is it, now?  Tell me...',\n",
              " \"I can't keep my eyes off you.  I would like to catch up with all the moments I didn't spend with you.\",\n",
              " 'I understand that you will soon be appointing Governors for the islands?  Is it not so?',\n",
              " 'Forgive me, Don Bobadilla -- those positions have already been taken.',\n",
              " 'May I ask by whom?',\n",
              " 'Bartolome and Giacomo Colon.',\n",
              " 'Don Alonso de Bobadilla.',\n",
              " 'Yes... I remember...',\n",
              " 'My letters of appointment.',\n",
              " 'Appointment to what?',\n",
              " 'Viceroy of the West Indies.',\n",
              " 'Congratulations.  Then I am free to search for the mainland.',\n",
              " 'How far from here?',\n",
              " 'I am not a seaman.  But I heard it is no more than a week at sea.  I hope you are not too disappointed.',\n",
              " 'How could I be?  The mainland has been found.  Exactly as I said it would.',\n",
              " 'I am afraid this is not the worst news.',\n",
              " 'I want to go with you!',\n",
              " \"There'll be a time.\",\n",
              " 'Do you swear on all the Holy Saints in heaven?',\n",
              " 'Yes... Yes, I do... On all of them!',\n",
              " 'I have to explore the mainland.',\n",
              " 'This time with me!',\n",
              " 'How are you feeling, Fernando?',\n",
              " 'Not bad.',\n",
              " 'Father...',\n",
              " 'There must be a passage to that other ocean.',\n",
              " 'What are you listening to?',\n",
              " \"I am not listening, Father.  But I can't help hearing.\",\n",
              " 'What does he say?',\n",
              " 'He asks when he can come to visit you.  He left his address.',\n",
              " 'I want you to tell me everything you remember, Father.  From the beginning.  Everything.',\n",
              " \"Really?  God... I wouldn't know where to start... and yet...\",\n",
              " 'No...',\n",
              " 'No?',\n",
              " 'I remind you, Senor Colon, that you are in no position to bargain with me.',\n",
              " \"I'm not bargaining!\",\n",
              " 'And were you never ambitious, Excellency?  Or is ambition only a virtue among the nobles, a fault for the rest of us?',\n",
              " \"If you won't accept our proposal, we'll simply find someone who will.\",\n",
              " \"They don't see sin in their nakedness.  They live according to nature, in a never ending summer. The islands are covered with trees, filled with blossoms and fruits. And...\",\n",
              " 'Forgive me, Don Colon.  But what about gold?',\n",
              " 'You defend yourself admirably...',\n",
              " '... for a commoner?',\n",
              " 'But we do have a lack of notaries. You should contact my administration.',\n",
              " 'Don Bobadilla is already a judge, my Dear Don Cristobal.',\n",
              " 'You seem to have a special talent for making friends.',\n",
              " 'What...?  Do I have so many already?',\n",
              " 'All I have to do is call the guards.',\n",
              " 'Call them.',\n",
              " 'I am not afraid of you.  You are nothing but a dreamer.',\n",
              " 'Look out of that window.',\n",
              " 'What do you see?',\n",
              " 'Roofs... towers, palaces... spires...',\n",
              " 'Say not here!  Cuba!',\n",
              " 'What is it?  A tribe?  An island?',\n",
              " 'You come!  You speak first!',\n",
              " 'Tell the Chief we thank him.',\n",
              " 'Chief knows.',\n",
              " 'Tell him his country is very beautiful.  Tell him we are leaving men here -- to build a fort.',\n",
              " 'Chief says -- how many?',\n",
              " 'Thousands.',\n",
              " 'To bring the word of God.',\n",
              " 'Chief says -- he has a God.',\n",
              " '... and also to bring medicine.',\n",
              " 'Chief says...',\n",
              " 'We will work with his people.  We want peace.  Ask the Chief if he understands?',\n",
              " 'He understands.',\n",
              " 'You have to find them, Utapan.  Look what they did!',\n",
              " 'You did the same to your God!',\n",
              " \"Utapan, won't you speak to me?  You used to know how to speak to me.\",\n",
              " 'You never learned how to speak my language.',\n",
              " 'Diego is a bright boy -- a pleasure to teach -- but so serious... Brothers should be raised together, Colon.  Even brothers from different mothers...',\n",
              " 'Father, I am doing what I think is the best for him.  And he has the teacher I would have chosen for myself.',\n",
              " \"God... That's in a week!\",\n",
              " \"That's what it says.\",\n",
              " 'How did you manage it?',\n",
              " 'With some difficulty.  I had to promise them you were not a total fool.',\n",
              " 'Why do you wish to sail west?',\n",
              " 'To open a new route to Asia.  At the moment there are only two ways of reaching it...',\n",
              " 'How can you be so certain?  The Ocean is said to be infinite.',\n",
              " 'Ignorance!  I believe the Indies are no more than 750 leagues west of the Canary Islands.',\n",
              " 'How can you be so certain?',\n",
              " 'The calculations of Toscanelli Marin de Tyr, Esdras...',\n",
              " 'Esdras is a Jew.',\n",
              " 'So was Christ!',\n",
              " \"Two minutes... and already you're a dead man.  Don't let passion overwhelm you, Colon.\",\n",
              " \"I'll try to remember that, Marchena...\",\n",
              " 'Father Marchena!',\n",
              " 'Passion is something one cannot control!',\n",
              " 'You get so carried away when you are being contradicted!',\n",
              " \"I've been contradicted all my life... Eternity!\",\n",
              " \"You mustn't give way to despair. You must wait.\",\n",
              " \"Wait!  I've waited seven years already!  How much longer do you want me to wait?\",\n",
              " 'If God intends you to go, then you will go.',\n",
              " 'Damn God!',\n",
              " 'Colon!',\n",
              " 'Damn all of you!  You all set up theories based on what?  You never leave the safety of your studies! Go out!  Find out what the world is about and then tell me something I can listen to!',\n",
              " 'All of them!  Just lies!',\n",
              " \"Colon!  Don't!\",\n",
              " 'In Nomine Patris et Filius, et Spiritus Sancti.',\n",
              " 'Forgive me, Father.  For I have sinned.',\n",
              " 'I am listening, my son.',\n",
              " 'Father, I have betrayed my family. I betrayed my men.  And I betrayed you.',\n",
              " 'What are you saying?',\n",
              " 'I lied.  The journey will be longer than I said.',\n",
              " 'How long?',\n",
              " 'I am not sure... It could be twice the distance.',\n",
              " 'May God forgive you...!  You must tell them!  You must tell your men!',\n",
              " \"If I tell them, they won't follow me.  You know that I am right, Father.  You trust me...\",\n",
              " \"My son, my son...  Your certitudes are sometimes frightening...  Christopher, you must speak to them. And if you don't I will.\",\n",
              " 'You are bound by an oath, Father.',\n",
              " 'I believed in you...',\n",
              " 'Give me absolution.',\n",
              " \"I suppose we're both old men now.\",\n",
              " \"You'll always be older than me, Father.\",\n",
              " 'I have to disagree.',\n",
              " 'I knew you would.',\n",
              " 'New worlds create new people.',\n",
              " 'Oh?  So you are a new man?',\n",
              " 'I should not even be listening to you, since my council said no.  But Santangel tells me you are a man of honor and sincerity... And Sanchez, that you are not a fool.',\n",
              " 'No more than the woman who said she would take Granada from the Moors.',\n",
              " 'The ocean is uncrossable?',\n",
              " 'What did they say about Granada before today?',\n",
              " 'I cannot ignore the verdict of my council.',\n",
              " 'Surely you can do anything you want.',\n",
              " 'May I speak freely?',\n",
              " 'You show no inclination to speak otherwise!',\n",
              " 'I know what I see.  I see someone who doesn\\'t accept the world as it is.  Who\\'s not afraid.  I see a women who thinks... \"What if?\"...',\n",
              " 'A woman?',\n",
              " 'How old are you, Senor Colon?',\n",
              " 'Thirty seven, Your Majesty... And you?',\n",
              " 'Do they have such thoughts?',\n",
              " 'They come and go as naked as the day God created them...',\n",
              " 'But without your brothers.  Nor are you to return to Santo Domingo or any of the other colonies.  You may explore the continent.',\n",
              " 'Thank you.',\n",
              " \"There is one thing I'd like to understand... Why do you want to go back, after all this?\",\n",
              " 'Your Majesty -- some men are content to read about things.  I must see them with my own eyes.  I cannot be other than I am.',\n",
              " \"And you say this is an Indian vice? By God!  I don't see any kind of pleasure that would make this a sin.\",\n",
              " 'The Indians have no such word, Don Moxica.',\n",
              " 'We lost cousins, friends.  We will wash this in blood.',\n",
              " \"If you want to keep your head on your shoulders, you'll do as I say.\",\n",
              " 'You want a war?  Fine.  We are a thousand.  They outnumber us by ten! Who will you kill?  Which tribe?',\n",
              " \"We don't need to know.\",\n",
              " \"We can't raise the wheel without it.\",\n",
              " \"My horse doesn't work.\",\n",
              " 'Don Moxica -- we all have to work.',\n",
              " 'You did not hear me, Don Colon.  Not my horse.',\n",
              " 'In one act of brutality, you have created chaos.  Tribes who were fighting each other are now joining forces against us!  All that because of your criminal savagery!',\n",
              " 'Savagery is what monkeys understand.',\n",
              " \"You'll be held in detention, deprived of your privileges and possessions.  Until you are returned to Spain where you will be judged. Have you anything to say?\",\n",
              " 'You will regret this.',\n",
              " 'Due west, Captain Mendez.  And may God be with us...',\n",
              " 'God be with us admiral.',\n",
              " \"Well... It's the men, Sir.  They wonder how you know our position. We've lost sight from land days ago...\",\n",
              " 'And what do you think Mendez?',\n",
              " \"Well, I surely know what a quadrant is!  But I've never seen it used at night before.\",\n",
              " 'Come over here.',\n",
              " 'What do you read?',\n",
              " 'Twenty eight.',\n",
              " \"What's he doing?\",\n",
              " \"He's drawing an isthmus... He's saying we're on an isthmus.\",\n",
              " 'Where can I meet this man?',\n",
              " 'Immediately.',\n",
              " \"You lied!  You cheated!  We're way past 750 leagues!\",\n",
              " 'Six days ago, yes.',\n",
              " 'You must be mad...!',\n",
              " 'We have to keep the hopes of these men alive!',\n",
              " \"We're on the verge of a mutiny, Colon!\",\n",
              " \"You think I don't know that?\",\n",
              " \"We're lost!\",\n",
              " 'The land is there.  I know it!',\n",
              " \"You don't know anything!  Listen Colon, these are my ships, right? So I'm telling you we're turning back!\",\n",
              " 'And then what?  Half of the water has gone, the rest is nearly putrid! You know that!',\n",
              " 'Jesus Maria!  I should have never listened to you!',\n",
              " 'You never did.  You did all the talking for both of us, remember?',\n",
              " 'You bloody...',\n",
              " 'Pinzon, Pinzon... All we can do now is go forward!  Think about that!',\n",
              " 'You tell that to them!',\n",
              " \"You're right.  Let the men decide.\",\n",
              " 'Is that the man I knew, Treasurer Sanchez?',\n",
              " 'Yes, Your Majesty.',\n",
              " 'You were right, Don Sanchez... His demands could never be granted.',\n",
              " 'Never, Your Majesty.  Although...',\n",
              " '... Into a monk...',\n",
              " \"Yes.  It would be a pity, wouldn't it?  Call him back!\",\n",
              " 'Every ship returns with a cargo of sick and dying.  But with no gold! The new world proves expensive, Your Majesty.',\n",
              " \"We weren't expecting immediate profits, were we?  We must have faith.  We must give time for time.\",\n",
              " '... But there is worse.  He ordered the execution of five members of the nobility...',\n",
              " 'Is this true, Brother Buyl?',\n",
              " 'Then, what do you suggest, Don Sanchez?',\n",
              " 'He must be replaced.',\n",
              " 'I know, I should not tolerate his impertinence.',\n",
              " 'Then why?',\n",
              " \"Are you my attorney?  I'm Emil.  I'm insane.\",\n",
              " \"I'm not your lawyer until I see the money.\",\n",
              " 'Oh no!  No!  Shit!',\n",
              " 'Emil.  Take it easy.  Stay with me.  Sit down.  What do you need?  What are you looking for?',\n",
              " \"Don't say anything.\",\n",
              " 'Where are we going?',\n",
              " \"I'm coming with you.\",\n",
              " 'Yes.  Yes, come with me!',\n",
              " \"I brought you some letters.  It's really fan mail.  Women mostly.  One wants to buy you clothes, another sent a check. Another wants a check.\",\n",
              " 'You bring the cigarettes?',\n",
              " '...delusions and paranoia.',\n",
              " 'I was all of these.',\n",
              " \"Well, you didn't appreciate the severity of it until recently.  No question about that.\",\n",
              " 'What about Oleg?',\n",
              " \"Disappeared.  They're looking everywhere.  Maybe he went back to Czechoslovakia.\",\n",
              " 'No, he is here.  Shit...',\n",
              " \"Don't worry about him.  Think about yourself.\",\n",
              " 'What about my movie rights?  Book rights?',\n",
              " \"Look, I haven't really focused on that kind of thing.\",\n",
              " \"What's your cut?  How much?\",\n",
              " 'I would say...half.  Half is fair.',\n",
              " 'No.  No way.',\n",
              " \"But it's...\",\n",
              " \"Thirty-percent.  No more.  Or I call another lawyer.  This is the biggest case of your life.  Don't try to negotiate.  Thirty percent.  Say yes or no.\",\n",
              " 'This is not about money, Emil.  I need your trust in me.',\n",
              " 'What else do you need?',\n",
              " \"I need to know about your background.  I need to know about your upbringing.  Why you're here.\",\n",
              " 'Give me another one, please.',\n",
              " 'Tell me about yourself.  What you did as a young boy... what your parents were like.',\n",
              " 'My father always degraded me.  Killed my self-esteem.  And my mother was blind.',\n",
              " 'Your mother was blind?',\n",
              " 'Yeah, she went blind giving birth to me. She went to fucking black market doctor to induce me.',\n",
              " 'Back in the Czech Republic?',\n",
              " 'Yeah, yeah...bad doctor gave her bad drugs which made her go blind.  And my father blamed me for her blindness...',\n",
              " \"Your father blamed you for your mother's blindness?\",\n",
              " 'Yeah, he hated me from day when I was born.  Put it out.  Can you put the cigarette out?',\n",
              " \"That's what he did to me.  He put cigarettes out on me.\",\n",
              " 'Your father put cigarettes out on you?',\n",
              " 'Out on my back when I was a small boy.',\n",
              " 'Can I see your back?',\n",
              " \"I'm abused.  Don't you think?\",\n",
              " \"I don't think it's abuse, I think it's torture.\",\n",
              " '...so we kill someone famous and if we are caught, we are sent to mental hospital...',\n",
              " \"Officers, there's your killer, do your duty, arrest him!\",\n",
              " '...my little sister and I shared a flat - I came home one night and a man was raping her.  His gun was on the chair... He came at me and I shot him.',\n",
              " \"Alright.  That's a justifiable homicide.\",\n",
              " 'Now I become custody of police department?',\n",
              " \"If you cooperate with the DA - maybe they'll help you with your situation.\",\n",
              " \"I will if they don't send me back.\",\n",
              " \"They won't until this is over.\",\n",
              " 'Are you married?',\n",
              " 'Divorced.',\n",
              " \"I can't take you to my place.\",\n",
              " 'Somewhere else?',\n",
              " 'The men are out of quarters - practicing putting out fires.',\n",
              " 'So...the station is empty?',\n",
              " 'You considered becoming a prostitute?',\n",
              " 'Yes, I considered it.',\n",
              " 'Did you ever turn tricks before?',\n",
              " 'No.',\n",
              " 'What about back home?',\n",
              " 'No.',\n",
              " \"I came here.  I had no money.  I knew no one.  I couldn't get a job because you have to have a green card to get work. They approached me - I could've made a lot of money.  I considered it, but... it's not who I am.  They pay me below the table at Ludwig's.\",\n",
              " 'So you were never a prostitute?',\n",
              " 'What are you asking me?',\n",
              " \"I'm just trying to find out who you are.\",\n",
              " \"I'm not a whore.  I'm not a whore.\",\n",
              " 'I know.',\n",
              " \"You don't know.  I'm sorry.  I was desperate.  That's not me.  I shot a cop.  Can you imagine what they'll do to me when I got to prison?\",\n",
              " \"They're not gonna send you right back.\",\n",
              " 'Are you alright?',\n",
              " \"I still can't believe Eddie's gone.\",\n",
              " 'Is he your boyfriend?',\n",
              " \"Ludwig?  He's gay - are you jealous?\",\n",
              " 'If I was your boyfriend, I might be.',\n",
              " \"If you were my boyfriend, I'd suggest you find another girlfriend that isn't going to jail ten-thousand miles away.\",\n",
              " 'A good Immigration lawyer could stall the process.  Eddie recommended one.',\n",
              " \"No matter what happens...I'm glad I met you.\",\n",
              " 'You better get packed.',\n",
              " 'Right.',\n",
              " 'Do you have coffee?',\n",
              " 'In the kitchen.',\n",
              " \"I'll make some for us.\",\n",
              " \"I'll get my clothes.\",\n",
              " 'What are you doing?',\n",
              " 'Pouring it out!',\n",
              " 'Forget about me.  You have enough problems of your own.',\n",
              " '...Do you really want me to forget about you?',\n",
              " \"I don't want to drag you down with me.\",\n",
              " 'Daphne, I...',\n",
              " \"I told your partner, I can't help.  I didn't see anything.\",\n",
              " \"C'mon, start at the beginning.  You know these people?\",\n",
              " 'Tamina was a friend of mine.  My shower was broken, she let me use theirs.',\n",
              " 'Go on.',\n",
              " \"Whether you tell us or not, we'll find out.  Better if it comes from you.\",\n",
              " 'If I tell you, will you arrest me?',\n",
              " \"Are you here illegally?  Don't worry about that.  We'll talk to Immigration. They won't deport you.\",\n",
              " \"No, no, don't talk to Immigration!\",\n",
              " 'A cop?',\n",
              " \"I'm from a small town in Slovakia.  Like the South here.  The Police is right, a civilian is wrong.  So I fled.\",\n",
              " \"Look, we can help you but right now we have to deal with what's happening here. Tell us the truth...is that the truth?\",\n",
              " \"You're a cop - you'll never believe me.\",\n",
              " 'Oh.',\n",
              " 'It was my decision, not his.',\n",
              " \"Well, I'm the Deputy Chief Fire Marshall and every now and then I'd like to be included in decisions.\",\n",
              " 'Look, after Jordy briefs me, you can do the press conference.  How about that? The case is all yours.',\n",
              " 'Oh yeah...?  Alright.',\n",
              " \"I'm ready to be briefed.  Excuse us.\",\n",
              " 'Who did cause and origin?',\n",
              " 'Who do you think, Chief?!',\n",
              " \"Then why didn't you talk to the reporter?\",\n",
              " \"'Cause we got more important things to do, like finding out who did it.\",\n",
              " 'Hey, Chief, what are you doing here?',\n",
              " \"I came to see how the investigation was going.  I called and you're not here.  I wait up at the station and you don't even show up!!!  I beep you - you don't return my call.  Where the hell have you been?!\",\n",
              " 'Ladder 20 was on the Rock for training. We stopped there... so she could get cleaned up.',\n",
              " \"What do you mean, 'cleaned up?'\",\n",
              " 'I let her take a shower.',\n",
              " 'A shower!?  Did you take one, too?',\n",
              " 'No!  Nothing happened.',\n",
              " \"Oh really.  That's nice.  You took a homicide witness to take a shower after your partner was shot?  Are you out of your fucking mind??  Are you having that much trouble gettin' dates?!\",\n",
              " 'Chief - mind if I take her?',\n",
              " 'Okay.  But not water sports.',\n",
              " \"The public doesn't have any idea what we do and now you're going to define our image!  This is going to be our Rodney King!\",\n",
              " 'What was I supposed to do?  The guy tried to mug me.  I was gonna send a cop back - I just forgot.',\n",
              " 'Forgot?  You handcuffed a civilian to a tree?!',\n",
              " 'Chief - I know I screwed up - but this guy was no innocent civilian.',\n",
              " 'Well this is gonna end your career and probably mine.',\n",
              " 'End my career?',\n",
              " \"How are you going to fight this?  Maybe if Oleg hadn't gotten away and you'd been on the front page, as a hero, this thing would be easier to fight.  You'd have the good to weight against the bad! It's unfortunate that I have to make decisions based upon your press coverage but there's nothing I can do!  Gimme your shield.\",\n",
              " 'But Chief?  Over this??',\n",
              " \"Don't you guys understand?  It's all about image.  The better we look the more money I get to pay you guys overtime.\",\n",
              " 'Yeah, right.',\n",
              " 'What was that, Korfin?',\n",
              " \"I said, yeah, you're right, Chief.  As soon as we get somethin' we'll let you alert the media.\",\n",
              " 'Did the D.A. videotape her deposition?',\n",
              " 'Yeah.  He finished awhile ago.',\n",
              " 'Alright.  Swing by her apartment.  Let her pick up her clothes and take her straight to Hoover Street.  You got that?',\n",
              " 'Yeah.',\n",
              " 'Coffee for me, I gotta slow down.',\n",
              " 'Vodka tonic.',\n",
              " \"It was freaky, I'll tell you.  Stupid kid.\",\n",
              " \"What's the kid gonna say - sorry? Meanwhile I'm not here anymore. Like last week - we were at the morgue and this guy was all chopped up - spleen here - liver there - his heart in a pan. Six hours ago this guy was walkin' his dog or buyin' a quart of milk.  Who knows?  But some kid's robbed him for $3 or some shit and shot him and now you can't tell if he's a piece of beef or a human being and I'm thinkin' that's me. Sooner or later.  That's me.\",\n",
              " \"I'm gonna propose.\",\n",
              " 'When?',\n",
              " 'Tomorrow.  At lunch.',\n",
              " 'You ready?',\n",
              " \"What's he looking for?\",\n",
              " 'A timer.',\n",
              " 'Where is she?',\n",
              " \"Takin' a bath.\",\n",
              " 'Any I.D.?',\n",
              " \"Still unknown but we're running prints. Kid over there caught the case.\",\n",
              " 'Sorry...PD only.',\n",
              " \"It's okay.\",\n",
              " 'Only one guys checked in?',\n",
              " 'Yeah.',\n",
              " ...]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 35
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ugxEiKdx4ssz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "class SimpleDialogueManager(object):\n",
        "    \"\"\"\n",
        "    This is a simple dialogue manager to test the telegram bot.\n",
        "    The main part of our bot will be written here.\n",
        "    \"\"\"\n",
        "    def __init__(self):\n",
        "        from chatterbot import ChatBot\n",
        "        from chatterbot.trainers import ChatterBotCorpusTrainer\n",
        "        from chatterbot.trainers import ListTrainer\n",
        "        chatbot = ChatBot('MLWhizChatterbot')\n",
        "        trainer = ChatterBotCorpusTrainer(chatbot)\n",
        "        trainer.train('chatterbot.corpus.english')\n",
        "        \n",
        "#        from chatbot import chatbot\n",
        "        trainer = ListTrainer(chatbot)        \n",
        "        \n",
        "#        chatbot.set_trainer(ListTrainer)\n",
        "#        trainer = ListTrainer(chatbot)\n",
        "        trainer.train(q_a_pairs)\n",
        "        trainer.train(q_a_pairs_2)\n",
        "        trainer.train(q_a_pairs_3)\n",
        "#         trainer.train(q_a_pairs_3)\n",
        "        self.chitchat_bot = chatbot\n",
        "         \n",
        "\n",
        "    def generate_answer(self, question): \n",
        "        response = self.chitchat_bot.get_response(question)\n",
        "        return response\n",
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Y9BslE-tLCCu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1969
        },
        "outputId": "eaf73170-f9fc-4da5-fb9d-83a375de50c2"
      },
      "source": [
        "df[1:100]\n"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>QuestionID</th>\n",
              "      <th>Question</th>\n",
              "      <th>DocumentID</th>\n",
              "      <th>DocumentTitle</th>\n",
              "      <th>SentenceID</th>\n",
              "      <th>Sentence</th>\n",
              "      <th>Label</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-1</td>\n",
              "      <td>The ice facade is approximately 60 m high</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-2</td>\n",
              "      <td>Ice formations in the Titlis glacier cave</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-3</td>\n",
              "      <td>A glacier cave is a cave formed within the ice...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Q1</td>\n",
              "      <td>how are glacier caves formed?</td>\n",
              "      <td>D1</td>\n",
              "      <td>Glacier cave</td>\n",
              "      <td>D1-4</td>\n",
              "      <td>Glacier caves are often called ice caves , but...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Q2</td>\n",
              "      <td>How are the directions of the velocity and for...</td>\n",
              "      <td>D2</td>\n",
              "      <td>Circular motion</td>\n",
              "      <td>D2-0</td>\n",
              "      <td>In physics , circular motion is a movement of ...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Q2</td>\n",
              "      <td>How are the directions of the velocity and for...</td>\n",
              "      <td>D2</td>\n",
              "      <td>Circular motion</td>\n",
              "      <td>D2-1</td>\n",
              "      <td>It can be uniform, with constant angular rate ...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Q2</td>\n",
              "      <td>How are the directions of the velocity and for...</td>\n",
              "      <td>D2</td>\n",
              "      <td>Circular motion</td>\n",
              "      <td>D2-2</td>\n",
              "      <td>The rotation around a fixed axis of a three-di...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Q2</td>\n",
              "      <td>How are the directions of the velocity and for...</td>\n",
              "      <td>D2</td>\n",
              "      <td>Circular motion</td>\n",
              "      <td>D2-3</td>\n",
              "      <td>The equations of motion describe the movement ...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Q2</td>\n",
              "      <td>How are the directions of the velocity and for...</td>\n",
              "      <td>D2</td>\n",
              "      <td>Circular motion</td>\n",
              "      <td>D2-4</td>\n",
              "      <td>Examples of circular motion include: an artifi...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Q2</td>\n",
              "      <td>How are the directions of the velocity and for...</td>\n",
              "      <td>D2</td>\n",
              "      <td>Circular motion</td>\n",
              "      <td>D2-5</td>\n",
              "      <td>Since the object's velocity vector is constant...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>Q2</td>\n",
              "      <td>How are the directions of the velocity and for...</td>\n",
              "      <td>D2</td>\n",
              "      <td>Circular motion</td>\n",
              "      <td>D2-6</td>\n",
              "      <td>Without this acceleration, the object would mo...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-0</td>\n",
              "      <td>Apollo Creed is a fictional character from the...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-1</td>\n",
              "      <td>He was played by Carl Weathers .</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-2</td>\n",
              "      <td>Creed had multiple nicknames, including The Ma...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-3</td>\n",
              "      <td>Urban legend states that Apollo Creed's name i...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-4</td>\n",
              "      <td>All of Apollo's championship fights were sched...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-5</td>\n",
              "      <td>Championship fights did not convert from 15 ro...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-6</td>\n",
              "      <td>Rocky Balboa is often wrongly credited with po...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Q5</td>\n",
              "      <td>how did apollo creed die</td>\n",
              "      <td>D5</td>\n",
              "      <td>Apollo Creed</td>\n",
              "      <td>D5-7</td>\n",
              "      <td>Balboa's signature colors were black and gold—...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Q6</td>\n",
              "      <td>how long is the term for federal judges</td>\n",
              "      <td>D6</td>\n",
              "      <td>United States federal judge</td>\n",
              "      <td>D6-0</td>\n",
              "      <td>In the United States, the title of federal jud...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Q6</td>\n",
              "      <td>how long is the term for federal judges</td>\n",
              "      <td>D6</td>\n",
              "      <td>United States federal judge</td>\n",
              "      <td>D6-1</td>\n",
              "      <td>In addition to the Supreme Court of the United...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Q6</td>\n",
              "      <td>how long is the term for federal judges</td>\n",
              "      <td>D6</td>\n",
              "      <td>United States federal judge</td>\n",
              "      <td>D6-2</td>\n",
              "      <td>Every judge appointed to such a court may be c...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Q6</td>\n",
              "      <td>how long is the term for federal judges</td>\n",
              "      <td>D6</td>\n",
              "      <td>United States federal judge</td>\n",
              "      <td>D6-3</td>\n",
              "      <td>All of these judges described thus far are ref...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Q6</td>\n",
              "      <td>how long is the term for federal judges</td>\n",
              "      <td>D6</td>\n",
              "      <td>United States federal judge</td>\n",
              "      <td>D6-4</td>\n",
              "      <td>In addition, judges of the Court of Internatio...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>Q6</td>\n",
              "      <td>how long is the term for federal judges</td>\n",
              "      <td>D6</td>\n",
              "      <td>United States federal judge</td>\n",
              "      <td>D6-5</td>\n",
              "      <td>Other judges serving in the federal courts, in...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>Q6</td>\n",
              "      <td>how long is the term for federal judges</td>\n",
              "      <td>D6</td>\n",
              "      <td>United States federal judge</td>\n",
              "      <td>D6-6</td>\n",
              "      <td>See Article I and Article III tribunals .</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>Q7</td>\n",
              "      <td>how a beretta model 21 pistols magazines works</td>\n",
              "      <td>D7</td>\n",
              "      <td>Beretta 21A Bobcat</td>\n",
              "      <td>D7-0</td>\n",
              "      <td>The Beretta 21A Bobcat is a small pocket-sized...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>Q7</td>\n",
              "      <td>how a beretta model 21 pistols magazines works</td>\n",
              "      <td>D7</td>\n",
              "      <td>Beretta 21A Bobcat</td>\n",
              "      <td>D7-1</td>\n",
              "      <td>Production began in late 1984, solely in the B...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>Q7</td>\n",
              "      <td>how a beretta model 21 pistols magazines works</td>\n",
              "      <td>D7</td>\n",
              "      <td>Beretta 21A Bobcat</td>\n",
              "      <td>D7-2</td>\n",
              "      <td>It is a further development of the Beretta Mod...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>Q9</td>\n",
              "      <td>how a vul works</td>\n",
              "      <td>D9</td>\n",
              "      <td>Variable universal life insurance</td>\n",
              "      <td>D9-0</td>\n",
              "      <td>Variable Universal Life Insurance (often short...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>70</th>\n",
              "      <td>Q15</td>\n",
              "      <td>how are pointe shoes made</td>\n",
              "      <td>D15</td>\n",
              "      <td>Pointe shoe</td>\n",
              "      <td>D15-1</td>\n",
              "      <td>The edge of the toe pad, which is inserted bet...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>71</th>\n",
              "      <td>Q15</td>\n",
              "      <td>how are pointe shoes made</td>\n",
              "      <td>D15</td>\n",
              "      <td>Pointe shoe</td>\n",
              "      <td>D15-2</td>\n",
              "      <td>A pointe shoe is a type of shoe worn by ballet...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>72</th>\n",
              "      <td>Q15</td>\n",
              "      <td>how are pointe shoes made</td>\n",
              "      <td>D15</td>\n",
              "      <td>Pointe shoe</td>\n",
              "      <td>D15-3</td>\n",
              "      <td>Pointe shoes developed from the desire for dan...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>Q15</td>\n",
              "      <td>how are pointe shoes made</td>\n",
              "      <td>D15</td>\n",
              "      <td>Pointe shoe</td>\n",
              "      <td>D15-4</td>\n",
              "      <td>They are normally worn by female dancers, thou...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>74</th>\n",
              "      <td>Q15</td>\n",
              "      <td>how are pointe shoes made</td>\n",
              "      <td>D15</td>\n",
              "      <td>Pointe shoe</td>\n",
              "      <td>D15-5</td>\n",
              "      <td>They are manufactured in a variety of colors, ...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-0</td>\n",
              "      <td>This tablespoon has a capacity of about 15 mL.</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>76</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-1</td>\n",
              "      <td>Measuring Spoons</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>77</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-2</td>\n",
              "      <td>In the US and parts of Canada, a tablespoon is...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>78</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-3</td>\n",
              "      <td>In the UK, Europe and most Commonwealth countr...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>79</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-4</td>\n",
              "      <td>In countries where a tablespoon is a serving s...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>80</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-5</td>\n",
              "      <td>A tablespoonful, nominally the capacity of one...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>81</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-6</td>\n",
              "      <td>It is abbreviated as T, tb, tbs, tbsp, tblsp, ...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>82</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-7</td>\n",
              "      <td>The capacity of ordinary tablespoons is not re...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-8</td>\n",
              "      <td>In the USA one tablespoon (measurement unit) i...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>84</th>\n",
              "      <td>Q16</td>\n",
              "      <td>how much is 1 tablespoon of water</td>\n",
              "      <td>D16</td>\n",
              "      <td>Tablespoon</td>\n",
              "      <td>D16-9</td>\n",
              "      <td>In Australia one tablespoon (measurement unit)...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>85</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-0</td>\n",
              "      <td>Harry Potter is a series of seven fantasy nove...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>86</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-1</td>\n",
              "      <td>The books chronicle the adventures of a wizard...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>87</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-2</td>\n",
              "      <td>The main story arc concerns Harry's quest to o...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-3</td>\n",
              "      <td>Since the release of the first novel Harry Pot...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>89</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-4</td>\n",
              "      <td>The series has also had some share of criticis...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>90</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-5</td>\n",
              "      <td>, the book series has sold about 450 million c...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>91</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-6</td>\n",
              "      <td>The last four books consecutively set records ...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>92</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-7</td>\n",
              "      <td>A series of many genres , including fantasy an...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>93</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-8</td>\n",
              "      <td>According to Rowling, the main theme is death.</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>94</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-9</td>\n",
              "      <td>There are also many other themes in the series...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-10</td>\n",
              "      <td>The initial major publishers of the books were...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-11</td>\n",
              "      <td>The books have since been published by many pu...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-12</td>\n",
              "      <td>The books, with the seventh book split into tw...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-13</td>\n",
              "      <td>The series also originated much tie-in merchan...</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>Q17</td>\n",
              "      <td>how much are the harry potter movies worth</td>\n",
              "      <td>D17</td>\n",
              "      <td>Harry Potter</td>\n",
              "      <td>D17-14</td>\n",
              "      <td>Also due to the success of the books and films...</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>99 rows × 7 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "   QuestionID  ... Label\n",
              "1          Q1  ...     0\n",
              "2          Q1  ...     0\n",
              "3          Q1  ...     1\n",
              "4          Q1  ...     0\n",
              "5          Q2  ...     0\n",
              "6          Q2  ...     0\n",
              "7          Q2  ...     0\n",
              "8          Q2  ...     0\n",
              "9          Q2  ...     0\n",
              "10         Q2  ...     0\n",
              "11         Q2  ...     0\n",
              "12         Q5  ...     0\n",
              "13         Q5  ...     0\n",
              "14         Q5  ...     0\n",
              "15         Q5  ...     0\n",
              "16         Q5  ...     0\n",
              "17         Q5  ...     0\n",
              "18         Q5  ...     0\n",
              "19         Q5  ...     0\n",
              "20         Q6  ...     0\n",
              "21         Q6  ...     0\n",
              "22         Q6  ...     0\n",
              "23         Q6  ...     0\n",
              "24         Q6  ...     0\n",
              "25         Q6  ...     0\n",
              "26         Q6  ...     0\n",
              "27         Q7  ...     0\n",
              "28         Q7  ...     0\n",
              "29         Q7  ...     0\n",
              "30         Q9  ...     0\n",
              "..        ...  ...   ...\n",
              "70        Q15  ...     0\n",
              "71        Q15  ...     0\n",
              "72        Q15  ...     0\n",
              "73        Q15  ...     0\n",
              "74        Q15  ...     0\n",
              "75        Q16  ...     1\n",
              "76        Q16  ...     0\n",
              "77        Q16  ...     0\n",
              "78        Q16  ...     0\n",
              "79        Q16  ...     0\n",
              "80        Q16  ...     0\n",
              "81        Q16  ...     0\n",
              "82        Q16  ...     0\n",
              "83        Q16  ...     1\n",
              "84        Q16  ...     1\n",
              "85        Q17  ...     0\n",
              "86        Q17  ...     0\n",
              "87        Q17  ...     0\n",
              "88        Q17  ...     0\n",
              "89        Q17  ...     0\n",
              "90        Q17  ...     0\n",
              "91        Q17  ...     0\n",
              "92        Q17  ...     0\n",
              "93        Q17  ...     0\n",
              "94        Q17  ...     0\n",
              "95        Q17  ...     0\n",
              "96        Q17  ...     0\n",
              "97        Q17  ...     0\n",
              "98        Q17  ...     1\n",
              "99        Q17  ...     0\n",
              "\n",
              "[99 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 41
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "WauF0PHB4syt",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import requests\n",
        "from requests.compat import urljoin\n",
        "import time\n",
        "import argparse\n",
        "import os\n",
        "import json\n",
        "\n",
        "class BotHandler(object):\n",
        "    \"\"\"\n",
        "        BotHandler is a class which implements all back-end of the bot.\n",
        "        It has three main functions:\n",
        "            'get_updates' — checks for new messages\n",
        "            'send_message' – posts new message to user\n",
        "            'get_answer' — computes the most relevant on a user's question\n",
        "    \"\"\"\n",
        "\n",
        "    def __init__(self, token, dialogue_manager):\n",
        "        \n",
        "        self.token = token\n",
        "        self.api_url = \"https://api.telegram.org/bot{}/\".format(token)\n",
        "        self.dialogue_manager = dialogue_manager\n",
        "\n",
        "    def get_updates(self, offset=None, timeout=30):\n",
        "        params = {\"timeout\": timeout, \"offset\": offset}\n",
        "        raw_resp = requests.get(urljoin(self.api_url, \"getUpdates\"), params)\n",
        "        try:\n",
        "            resp = raw_resp.json()\n",
        "        except json.decoder.JSONDecodeError as e:\n",
        "            print(\"Failed to parse response {}: {}.\".format(raw_resp.content, e))\n",
        "            return []\n",
        "\n",
        "        if \"result\" not in resp:\n",
        "            return []\n",
        "        return resp[\"result\"]\n",
        "\n",
        "    def send_message(self, chat_id, text):\n",
        "        params = {\"chat_id\": chat_id, \"text\": text}\n",
        "        return requests.post(urljoin(self.api_url, \"sendMessage\"), params)\n",
        "\n",
        "    def get_answer(self, question):\n",
        "        if question == '/start':\n",
        "            return \"Hi, I am your project bot. How can I help you today?\"\n",
        "        return self.dialogue_manager.generate_answer(question)\n",
        "\n",
        "\n",
        "def is_unicode(text):\n",
        "    return len(text) == len(text.encode())\n",
        "\n",
        "\n",
        "# class SimpleDialogueManager(object):\n",
        "#     \"\"\"\n",
        "#     This is a simple dialogue manager to test the telegram bot.\n",
        "#     The main part of our bot will be written here.\n",
        "#     \"\"\"\n",
        "#     def generate_answer(self, question): \n",
        "#         if \"Hi\" in question:\n",
        "#             return \"Hello, You\" \n",
        "#         else:\n",
        "#             return \"Don't be rude. Say Hi first.\"\n",
        "        \n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "2QZhtGEw4s1n",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1550
        },
        "outputId": "191ab9e1-8dca-4109-8e69-ba7ecfff703f"
      },
      "source": [
        "import nltk\n",
        "nltk.download('punkt')\n",
        "\n",
        "print(\"Hurraaaaaaaay It workss\")\n",
        "\n",
        "def main():\n",
        "    # Put your own Telegram Access token here...\n",
        "    token = '828781554:AAFeYtCKCs8Ztc2UJdFakDXi4i71UWzlBsU'\n",
        "    simple_manager = SimpleDialogueManager()\n",
        "    bot = BotHandler(token, simple_manager)\n",
        "    ###############################################################\n",
        "\n",
        "    print(\"Ready to talk!\")\n",
        "    offset = 0\n",
        "    while True:\n",
        "        updates = bot.get_updates(offset=offset)\n",
        "        for update in updates:\n",
        "            print(\"An update received.\")\n",
        "            if \"message\" in update:\n",
        "                chat_id = update[\"message\"][\"chat\"][\"id\"]\n",
        "                if \"text\" in update[\"message\"]:\n",
        "                    text = update[\"message\"][\"text\"]\n",
        "                    if is_unicode(text):\n",
        "                        print(\"Update content: {}\".format(update))\n",
        "                        bot.send_message(chat_id, bot.get_answer(update[\"message\"][\"text\"]))\n",
        "                    else:\n",
        "                        bot.send_message(chat_id, \"Hmm, you are sending some weird characters to me...\")\n",
        "            offset = max(offset, update['update_id'] + 1)\n",
        "        time.sleep(1)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    main()\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[nltk_data] Downloading package punkt to /root/nltk_data...\n",
            "[nltk_data]   Package punkt is already up-to-date!\n",
            "Hurraaaaaaaay It workss\n",
            "[nltk_data] Downloading package stopwords to /root/nltk_data...\n",
            "[nltk_data]   Package stopwords is already up-to-date!\n",
            "[nltk_data] Downloading package averaged_perceptron_tagger to\n",
            "[nltk_data]     /root/nltk_data...\n",
            "[nltk_data]   Package averaged_perceptron_tagger is already up-to-\n",
            "[nltk_data]       date!\n",
            "Training ai.yml: [##########          ] 48%"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/chatterbot/corpus.py:38: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please read https://msg.pyyaml.org/load for full details.\n",
            "  return yaml.load(data_file)\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Training ai.yml: [####################] 100%\n",
            "Training botprofile.yml: [####################] 100%\n",
            "Training computers.yml: [####################] 100%\n",
            "Training conversations.yml: [####################] 100%\n",
            "Training emotion.yml: [####################] 100%\n",
            "\n",
            "Training gossip.yml: [####################] 100%\n",
            "Training greetings.yml: [####################] 100%\n",
            "Training health.yml: [####################] 100%\n",
            "Training history.yml: [####################] 100%\n",
            "Training humor.yml: [####################] 100%\n",
            "Training literature.yml: [####################] 100%\n",
            "Training money.yml: [####################] 100%\n",
            "Training movies.yml: [####################] 100%\n",
            "Training politics.yml: [####################] 100%\n",
            "Training psychology.yml: [####################] 100%\n",
            "Training science.yml: [####################] 100%\n",
            "Training sports.yml: [####################] 100%\n",
            "Training trivia.yml: [####################] 100%\n",
            "List Trainer: [####################] 100%\n",
            "List Trainer: [####################] 100%\n",
            "List Trainer: [####################] 100%\n",
            "Ready to talk!\n",
            "An update received.\n",
            "Update content: {'update_id': 971090403, 'message': {'message_id': 406, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340551, 'text': 'Hello, How things are going?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090404, 'message': {'message_id': 408, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340573, 'text': 'So you are going to leave me?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090405, 'message': {'message_id': 410, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340616, 'text': 'How are you'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090406, 'message': {'message_id': 412, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340617, 'text': '?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090407, 'message': {'message_id': 414, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340644, 'text': 'How things are doing now?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090408, 'message': {'message_id': 416, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340673, 'text': \"And where're you going?\"}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090409, 'message': {'message_id': 418, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340700, 'text': \"Promise me you won't talk to any boys unless your sister is present.\"}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090410, 'message': {'message_id': 420, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340734, 'text': 'how many people with you in your old school?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090411, 'message': {'message_id': 422, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340766, 'text': 'go to hell'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090412, 'message': {'message_id': 424, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340787, 'text': 'It is lung cancer'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090413, 'message': {'message_id': 426, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340857, 'text': \"let's meet Tommorow\"}}\n",
            "An update received.\n",
            "An update received.\n",
            "Update content: {'update_id': 971090415, 'message': {'message_id': 428, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340883, 'text': \"let's meet tommorw\"}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090416, 'message': {'message_id': 430, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340899, 'text': 'Fuck you'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090417, 'message': {'message_id': 432, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340911, 'text': 'fuck you'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090418, 'message': {'message_id': 434, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340920, 'text': 'fuck you'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090419, 'message': {'message_id': 436, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340941, 'text': 'do you love me?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090420, 'message': {'message_id': 438, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340964, 'text': 'Have a pleasant day, sir'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090421, 'message': {'message_id': 440, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340981, 'text': 'Where were you?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090422, 'message': {'message_id': 442, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559340991, 'text': 'where were you?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090423, 'message': {'message_id': 444, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341005, 'text': 'but how can you be so vague?'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090424, 'message': {'message_id': 446, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341035, 'text': 'So you want me to love you after all what you did!!'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090425, 'message': {'message_id': 448, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341051, 'text': 'No'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090426, 'message': {'message_id': 450, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341068, 'text': 'yes you should'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090427, 'message': {'message_id': 452, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341080, 'text': \"Don't know\"}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090428, 'message': {'message_id': 454, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341093, 'text': 'Course'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090429, 'message': {'message_id': 456, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341106, 'text': 'Of course'}}\n",
            "An update received.\n",
            "Update content: {'update_id': 971090430, 'message': {'message_id': 458, 'from': {'id': 668280772, 'is_bot': False, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'language_code': 'en'}, 'chat': {'id': 668280772, 'first_name': 'Moustafa', 'last_name': 'Elsayed', 'username': 'melsayed7', 'type': 'private'}, 'date': 1559341126, 'text': \"Well, I thought we'd start with pronunciation, if that's okay with you.\"}}\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D6hjkWwf4s4y",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "jVZXIBmeIfXi",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}